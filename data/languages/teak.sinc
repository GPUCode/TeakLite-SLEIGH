# 0x0000 0x0000    nop 
:nop        is op_0015=0x0 {}

# 0x94C0 0x011F    norm At<Ax, 8>,At<Rn, 0>,At<StepZIDS, 3>,
:norm    Ax_8,RnAndModify_0    is Ax_8 & RnAndModify_0 & op_0507=0x6 & op_0915=0x4A 
{
    if(N) goto inst_next;
    V = (Ax_8[38,1] != Ax_8[39,1]);
    VL = VL || V;
    Ax_8 = Ax_8 << 1;
    C = (Ax_8[39,1]) != 0;
    SetAccFlag(Ax_8);
    build RnAndModify_0;
    R = RnAndModify_0 == 0;
}

# 0x4980 0x000F    swap At<SwapType, 0>,
# SwapTypes:
#   val native           nocash         ;meaning
#   0:  (a0,b0)          a0,b0          ;a0 <--> b0                ;flags(a0)
#   1:  (a0,b1)          a0,b1          ;a0 <--> b1                ;flags(a0)
#   2:  (a1,b0)          a1,b0          ;a1 <--> b0                ;flags(a1)
#   3:  (a1,b1)          a1,b1          ;a1 <--> b1                ;flags(a1)
#   4:  (a0,b0),(a1,b1)  a0:a1,b0:b1    ;a0 <--> b0 and a1 <--> b1 ;flags(a0)
#   5:  (a0,b1),(a1,b0)  a0:a1,b1:b0    ;a0 <--> b1 and a1 <--> b0 ;flags(a0)
#   6:  (a0,b0,a1)       a1,b0,a0       ;a0 --> b0 --> a1          ;flags(a1)
#   7:  (a0,b1,a1)       a1,b1,a0       ;a0 --> b1 --> a1          ;flags(a1)
#   8:  (a1,b0,a0)       a0,b0,a1       ;a1 --> b0 --> a0          ;flags(a0)
#   9:  (a1,b1,a0)       a0,b1,a1       ;a1 --> b1 --> a0          ;flags(a0)
#   A:  (b0,a0,b1)       b1,a0,b0       ;b0 --> a0 --> b1          ;flags(a0)!
#   B:  (b0,a1,b1)       b1,a1,b0       ;b0 --> a1 --> b1          ;flags(a1)!
#   C:  (b1,a0,b0)       b0,a0,b1       ;b1 --> a0 --> b0          ;flags(a0)!
#   D:  (b1,a1,b0)       b0,a1,b1       ;b1 --> a1 --> b0          ;flags(a1)!
#   E:  reserved         reserved       ;-                         ;-
#   F:  reserved         reserved       ;-                         ;-
with : op_0415=0x498 { 
    :swap (a0,b0)    is a0 & b0 & SwapType_0=0x0
    {
        local tmp:5 = a0;
        a0 = b0;
        b0 = tmp;
        SetAccFlag(a0);
    }
    :swap (a0,b1)    is a0 & b1 & SwapType_0=0x1
    {
        local tmp:5 = a0;
        a0 = b1;
        b1 = tmp;
        SetAccFlag(a0);
    }
    :swap (a1,b0)    is a1 & b0 & SwapType_0=0x2
    {
        local tmp:5 = a1;
        a1 = b0;
        b0 = tmp;
        SetAccFlag(a1);
    }
    :swap (a1,b1)    is a1 & b1 & SwapType_0=0x3
    {
        local tmp:5 = a1;
        a1 = b1;
        b1 = tmp;
        SetAccFlag(a1);
    }
    :swap (a0,b0),(a1,b1)    is a0 & b0 & a1 & b1 & SwapType_0=0x4
    {
        local tmp:5 = a0;
        a0 = b0;
        b0 = tmp;
        tmp = a1;
        a1 = b1;
        b1 = tmp;
        SetAccFlag(a0);
    }
    :swap (a0,b1),(a1,b0)    is a0 & b1 & a1 & b0 & SwapType_0=0x5
    {
        local tmp:5 = a0;
        a0 = b1;
        b1 = tmp;
        tmp = a1;
        a1 = b0;
        b0 = tmp;
        SetAccFlag(a0);
    }
    :swap (a0,b0,a1)    is a0 & b0 & a1 & SwapType_0=0x6
    {
        local tmp:5 = a1;
        a1 = b0;
        b0 = a0;
        a0 = tmp;
        SetAccFlag(a1);
    }
    :swap (a0,b1,a1)    is a0 & b1 & a1 & SwapType_0=0x7
    {
        local tmp:5 = a1;
        a1 = b1;
        b1 = a0;
        a0 = tmp;
        SetAccFlag(a1);
    }
    :swap (a1,b0,a0)    is a1 & b0 & a0 & SwapType_0=0x8
    {
        local tmp:5 = a0;
        a0 = b0;
        b0 = a1;
        a1 = tmp;
        SetAccFlag(a0);
    }
    :swap (a1,b1,a0)    is a1 & b1 & a0 & SwapType_0=0x9
    {
        local tmp:5 = a0;
        a0 = b1;
        b1 = a1;
        a1 = tmp;
        SetAccFlag(a0);
    }
    :swap (b0,a0,b1)    is b0 & a0 & b1 & SwapType_0=0xA
    {
        local tmp:5 = b1;
        b1 = a0;
        a0 = b0;
        b0 = tmp;
        SetAccFlag(a0);
    }
    :swap (b0,a1,b1)    is b0 & a1 & b1 & SwapType_0=0xB
    {
        local tmp:5 = b1;
        b1 = a1;
        a1 = b0;
        b0 = tmp;
        SetAccFlag(a1);
    }
    :swap (b1,a0,b0)    is b1 & a0 & b0 & SwapType_0=0xC
    {
        local tmp:5 = b0;
        b0 = a0;
        a0 = b1;
        b1 = tmp;
        SetAccFlag(a0);
    }
    :swap (b1,a1,b0)    is b1 & a1 & b0 & SwapType_0=0xD
    {
        local tmp:5 = b0;
        b0 = a1;
        a1 = b1;
        b1 = tmp;
        SetAccFlag(a1);
    }
}

# 0x0020 0x0000    trap 
:trap        is op_0015=0x20 { debug_trap(); }

# 0xD291 0x0C60    or_ At<Ab, 10>,At<Ax, 6>,At<Ax, 5>,
:or_    Ab_10,Ax_6,Ax_5    is Ab_10 & Ax_6 & Ax_5 & op_0004=0x11 & op_0709=0x5 & op_1215=0xD unimpl

# 0xD4A4 0x0103    or_ At<Ax, 8>,At<Bx, 1>,At<Ax, 0>,
:or_    Ax_8,Bx_1,Ax_0    is Ax_8 & Bx_1 & Ax_0 & op_0207=0x29 & op_0915=0x6A unimpl

# 0xD3C4 0x0403    or_ At<Bx, 10>,At<Bx, 1>,At<Ax, 0>,
:or_    Bx_10,Bx_1,Ax_0    is Bx_10 & Bx_1 & Ax_0 & op_0209=0xF1 & op_1115=0x1A unimpl

# 0xD2DA 0x0C01    add At<Ab, 10>,At<Bx, 0>,
:add    Ab_10,Bx_0    is Ab_10 & Bx_0 & op_0109=0x16D & op_1215=0xD unimpl

# 0x5DF0 0x0003    add At<Bx, 1>,At<Ax, 0>,
:add    Bx_1,Ax_0    is Bx_1 & Ax_0 & op_0215=0x177C unimpl

# 0xD782 0x0001    add_p1 At<Ax, 0>,
:add_p1    Ax_0    is Ax_0 & op_0115=0x6BC1 unimpl

# 0x5DF8 0x0003    add At<Px, 1>,At<Bx, 0>,
:add    Px_1,Bx_0    is Px_1 & Bx_0 & op_0215=0x177E unimpl

# 0x8A61 0x0118    sub At<Ab, 3>,At<Bx, 8>,
:sub    Ab_3,Bx_8    is Ab_3 & Bx_8 & op_0002=0x1 & op_0507=0x3 & op_0915=0x45 unimpl

# 0x8861 0x0018    sub At<Bx, 4>,At<Ax, 3>,
:sub    Bx_4,Ax_3    is Bx_4 & Ax_3 & op_0002=0x1 & op_0515=0x443 unimpl

# 0xD4B9 0x0100    sub_p1 At<Ax, 8>,
:sub_p1    Ax_8    is Ax_8 & op_0007=0xB9 & op_0915=0x6A unimpl

# 0x8FD0 0x0003    sub At<Px, 1>,At<Bx, 0>,
:sub    Px_1,Bx_0    is Px_1 & Bx_0 & op_0215=0x23F4 unimpl

# 0x5DC0 0x000C    app At<Ab, 2>,BZr,Add,PP,Add,PP,
:app    Ab_2    is Ab_2 & op_0001=0x0 & op_0415=0x5DC unimpl

# 0x5DC1 0x000C    app At<Ab, 2>,BZr,Add,PP,Add,PA,
:app    Ab_2    is Ab_2 & op_0001=0x1 & op_0415=0x5DC unimpl

# 0x4590 0x000C    app At<Ab, 2>,BAc,Add,PP,Add,PP,
:app    Ab_2    is Ab_2 & op_0001=0x0 & op_0415=0x459 unimpl

# 0x4592 0x000C    app At<Ab, 2>,BAc,Add,PP,Add,PA,
:app    Ab_2    is Ab_2 & op_0001=0x2 & op_0415=0x459 unimpl

# 0x4593 0x000C    app At<Ab, 2>,BAc,Add,PA,Add,PA,
:app    Ab_2    is Ab_2 & op_0001=0x3 & op_0415=0x459 unimpl

# 0x5DC2 0x000C    app At<Ab, 2>,BZr,Add,PP,Sub,PP,
:app    Ab_2    is Ab_2 & op_0001=0x2 & op_0415=0x5DC unimpl

# 0x5DC3 0x000C    app At<Ab, 2>,BZr,Add,PP,Sub,PA,
:app    Ab_2    is Ab_2 & op_0001=0x3 & op_0415=0x5DC unimpl

# 0x80C6 0x0C00    app At<Ab, 10>,BAc,Sub,PP,Sub,PP,
:app    Ab_10    is Ab_10 & op_0009=0xC6 & op_1215=0x8 unimpl

# 0x82C6 0x0C00    app At<Ab, 10>,BAc,Sub,PP,Sub,PA,
:app    Ab_10    is Ab_10 & op_0009=0x2C6 & op_1215=0x8 unimpl

# 0x83C6 0x0C00    app At<Ab, 10>,BAc,Sub,PA,Sub,PA,
:app    Ab_10    is Ab_10 & op_0009=0x3C6 & op_1215=0x8 unimpl

# 0x906C 0x0003    app At<Ab, 0>,BAc,Add,PP,Sub,PP,
:app    Ab_0    is Ab_0 & op_0215=0x241B unimpl

# 0x49C2 0x0030    app At<Ab, 4>,BAc,Sub,PP,Add,PP,
:app    Ab_4    is Ab_4 & op_0003=0x2 & op_0615=0x127 unimpl

# 0x916C 0x0003    app At<Ab, 0>,BAc,Add,PP,Sub,PA,
:app    Ab_0    is Ab_0 & op_0215=0x245B unimpl

# 0x49C3 0x0030    app At<Ab, 4>,BAc,Sub,PP,Add,PA,
:app    Ab_4    is Ab_4 & op_0003=0x3 & op_0615=0x127 unimpl

# 0x6F80 0x001F    add_add At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:add_add    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0515=0x37C unimpl

# 0x6FA0 0x001F    add_sub At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:add_sub    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0515=0x37D unimpl

# 0x6FC0 0x001F    sub_add At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:sub_add    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0515=0x37E unimpl

# 0x6FE0 0x001F    sub_sub At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:sub_sub    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0515=0x37F unimpl

# 0x5DB0 0x000F    add_sub_sv At<ArRn1, 1>,At<ArStep1, 0>,At<Ab, 2>,
:add_sub_sv    ArRn1_1,ArStep1_0,Ab_2    is ArRn1_1 & ArStep1_0 & Ab_2 & op_0415=0x5DB unimpl

# 0x5DE0 0x000F    sub_add_sv At<ArRn1, 1>,At<ArStep1, 0>,At<Ab, 2>,
:sub_add_sv    ArRn1_1,ArStep1_0,Ab_2    is ArRn1_1 & ArStep1_0 & Ab_2 & op_0415=0x5DE unimpl

# 0x8064 0x011B    sub_add_i_mov_j_sv At<ArpRn1, 8>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:sub_add_i_mov_j_sv    ArpRn1_8,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_8 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0202=0x1 & op_0507=0x3 & op_0915=0x40 unimpl

# 0x5D80 0x001F    sub_add_j_mov_i_sv At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 3>,
:sub_add_j_mov_i_sv    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_3 & op_0515=0x2EC unimpl

# 0x9070 0x010F    add_sub_i_mov_j At<ArpRn1, 8>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 2>,
:add_sub_i_mov_j    ArpRn1_8,ArpStep1_0,ArpStep1_1,Ab_2    is ArpRn1_8 & ArpStep1_0 & ArpStep1_1 & Ab_2 & op_0407=0x7 & op_0915=0x48 unimpl

# 0x5E30 0x010F    add_sub_j_mov_i At<ArpRn1, 8>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 2>,
:add_sub_j_mov_i    ArpRn1_8,ArpStep1_0,ArpStep1_1,Ab_2    is ArpRn1_8 & ArpStep1_0 & ArpStep1_1 & Ab_2 & op_0407=0x3 & op_0915=0x2F unimpl

# 0x8000 0xFFFF0F1F    mul At<Mul3, 8>,At<Rn, 0>,At<StepZIDS, 3>,At<Imm16, 16>,At<Ax, 11>,
:mul    Mul3_8,Rn_0,StepZIDS_3,Imm16_16,Ax_11    is Mul3_8 & Rn_0 & StepZIDS_3 & Ax_11 & op_0507=0x0 & op_1215=0x8 ; Imm16_16 unimpl

# 0x8020 0x0F1F    mul_y0 At<Mul3, 8>,At<Rn, 0>,At<StepZIDS, 3>,At<Ax, 11>,
:mul_y0    Mul3_8,Rn_0,StepZIDS_3,Ax_11    is Mul3_8 & Rn_0 & StepZIDS_3 & Ax_11 & op_0507=0x1 & op_1215=0x8 unimpl

# 0x8040 0x0F1F    mul_y0 At<Mul3, 8>,At<Register, 0>,At<Ax, 11>,
:mul_y0    Mul3_8,Register_0,Ax_11    is Mul3_8 & Register_0 & Ax_11 & op_0507=0x2 & op_1215=0x8 unimpl

# 0xD000 0x0F7F    mul At<Mul3, 8>,At<R45, 2>,At<StepZIDS, 5>,At<R0123, 0>,At<StepZIDS, 3>,At<Ax, 11>,
:mul    Mul3_8,R45_2,StepZIDS_5,R0123_0,StepZIDS_3,Ax_11    is Mul3_8 & R45_2 & StepZIDS_5 & R0123_0 & StepZIDS_3 & Ax_11 & op_0707=0x0 & op_1215=0xD unimpl

# 0x5EA0 0x000F    mul_y0_r6 At<Mul3, 1>,At<Ax, 0>,
:mul_y0_r6    Mul3_1,Ax_0    is Mul3_1 & Ax_0 & op_0415=0x5EA unimpl

# 0xE000 0x0EFF    mul_y0 At<Mul2, 9>,At<MemImm8, 0>,At<Ax, 11>,
:mul_y0    Mul2_9,MemImm8_0,Ax_11    is Mul2_9 & MemImm8_0 & Ax_11 & op_0808=0x0 & op_1215=0xE unimpl

# 0x0800 0x00FF    mpyi At<Imm8s, 0>,
:mpyi    Imm8s_0    is Imm8s_0 & op_0815=0x8 unimpl

# 0xD080 0x017F    msu At<R45, 2>,At<StepZIDS, 5>,At<R0123, 0>,At<StepZIDS, 3>,At<Ax, 8>,
:msu    R45_2,StepZIDS_5,R0123_0,StepZIDS_3,Ax_8    is R45_2 & StepZIDS_5 & R0123_0 & StepZIDS_3 & Ax_8 & op_0707=0x1 & op_0915=0x68 unimpl

# 0x90C0 0xFFFF011F    msu At<Rn, 0>,At<StepZIDS, 3>,At<Imm16, 16>,At<Ax, 8>,
:msu    Rn_0,StepZIDS_3,Imm16_16,Ax_8    is Rn_0 & StepZIDS_3 & Ax_8 & op_0507=0x6 & op_0915=0x48 ; Imm16_16 unimpl

# 0x8264 0x011B    msusu At<ArRn2, 3>,At<ArStep2, 0>,At<Ax, 8>,
:msusu    ArRn2_3,ArStep2_0,Ax_8    is ArRn2_3 & ArStep2_0 & Ax_8 & op_0202=0x1 & op_0507=0x3 & op_0915=0x41 unimpl

# 0x4D84 0x0003    mac_x1to0 At<Ax, 1>,Unused<0>,
:mac_x1to0    Ax_1    is Ax_1 & Unused_0 & op_0215=0x1361 unimpl

# 0x5E28 0x0107    mac1 At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ax, 8>,
:mac1    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ax_8    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ax_8 & op_0307=0x5 & op_0915=0x2F unimpl

# 0xD7C2 0x0001    pacr1 At<Ax, 0>,
:pacr1    Ax_0    is Ax_0 & op_0115=0x6BE1 unimpl

# 0x8ED0 0x000F    clr At<Ab, 2>,At<Ab, 0>,
:clr    Ab_2,Ab_0    is Ab_2 & Ab_0 & op_0415=0x8ED unimpl

# 0x8DD0 0x000F    clrr At<Ab, 2>,At<Ab, 0>,
:clrr    Ab_2,Ab_0    is Ab_2 & Ab_0 & op_0415=0x8DD unimpl

# 0x5C00 0xFFFF00FF    bkrep At<Imm8, 0>,At<Address16, 16>,
:bkrep    Imm8_0,Address16_16    is Imm8_0 & op_0815=0x5C ; Address16_16 unimpl

# 0x5D00 0xFFFF007F    bkrep At<Register, 0>,At<Address18_16, 16>,At<Address18_2, 5>,
:bkrep    Register_0,Address18_16_16,Address18_2_5    is Register_0 & Address18_2_5 & op_0715=0xBA ; Address18_16_16 unimpl

# 0x8FDC 0xFFFF0003    bkrep_r6 At<Address18_16, 16>,At<Address18_2, 0>,
:bkrep_r6    Address18_16_16,Address18_2_0    is Address18_2_0 & op_0215=0x23F7 ; Address18_16_16 unimpl

# 0xDA9C 0x0003    bkreprst At<ArRn2, 0>,
:bkreprst    ArRn2_0    is ArRn2_0 & op_0215=0x36A7 unimpl

# 0x5F48 0x0003    bkreprst_memsp Unused<0>,Unused<1>,
:bkreprst_memsp        is Unused_0 & Unused_1 & op_0215=0x17D2 unimpl

# 0xDADC 0x0403    bkrepsto At<ArRn2, 0>,Unused<10>,
:bkrepsto    ArRn2_0    is ArRn2_0 & Unused_10 & op_0209=0xB7 & op_1115=0x1B unimpl

# 0x9468 0x0007    bkrepsto_memsp Unused<0>,Unused<1>,Unused<2>,
:bkrepsto_memsp        is Unused_0 & Unused_1 & Unused_2 & op_0315=0x128D unimpl

# 0x4B80 0x003F    banke At<BankFlags, 0>,
:banke    BankFlags_0    is BankFlags_0 & op_0615=0x12E unimpl

# 0x8CDF 0x0000    bankr 
:bankr        is op_0015=0x8CDF unimpl

# 0x8CDC 0x0001    bankr At<Ar, 0>,
:bankr    Ar_0    is Ar_0 & op_0115=0x466E unimpl

# 0x8CD0 0x0007    bankr At<Ar, 2>,At<Arp, 0>,
:bankr    Ar_2,Arp_0    is Ar_2 & Arp_0 & op_0315=0x119A unimpl

# 0x8CD8 0x0003    bankr At<Arp, 0>,
:bankr    Arp_0    is Arp_0 & op_0215=0x2336 unimpl

# 0x5EB8 0x0007    bitrev At<Rn, 0>,
:bitrev    Rn_0    is Rn_0 & op_0315=0xBD7 unimpl

# 0xD7E8 0x0007    bitrev_dbrv At<Rn, 0>,
:bitrev_dbrv    Rn_0    is Rn_0 & op_0315=0x1AFD unimpl

# 0xD7E0 0x0007    bitrev_ebrv At<Rn, 0>,
:bitrev_ebrv    Rn_0    is Rn_0 & op_0315=0x1AFC unimpl

# 0x4180 0xFFFF003F    br At<Address18_16, 16>,At<Address18_2, 4>,At<Cond, 0>,
:br    Address18_16and4,Cond_0    is (Cond_0 & op_0615=0x106) ... & Address18_16and4
{
    if(!Cond_0) goto inst_next;
    
    goto Address18_16and4;
} 


# 0x5000 0x07FF    brr At<RelAddr7, 4>,At<Cond, 0>,
:brr    RelAddr7_4,Cond_0    is RelAddr7_4 & Cond_0 & op_1115=0xA 
{
    if(!Cond_0) goto inst_next;
    goto RelAddr7_4;
}

# 0xD3C0 0x0000    break_ 
:break_        is op_0015=0xD3C0 unimpl

# 0x41C0 0xFFFF003F    call At<Address18_16, 16>,At<Address18_2, 4>,At<Cond, 0>,
:call    Address18_16and4,Cond_0    is (Cond_0 & op_0615=0x107) ... & Address18_16and4 
{
    if(!Cond_0) goto inst_next;

    PushPC();
    call Address18_16and4;
}

# 0xD480 0x0100    calla At<Axl, 8>,
:calla    Axl_8    is Axl_8 & op_0007=0x80 & op_0915=0x6A 
{
    PushPC();
    call [Axl_8];
}

# 0xD381 0x0010    calla At<Ax, 4>,
:calla    Ax_4    is Ax_4 & op_0003=0x1 & op_0515=0x69C
{
    PushPC();
    call [Ax_4 & 0x3FFFF];
}

# 0x1000 0x07FF    callr At<RelAddr7, 4>,At<Cond, 0>,
:callr    RelAddr7_4,Cond_0    is RelAddr7_4 & Cond_0 & op_1115=0x2
{
    if(!Cond_0) goto inst_next;

    PushPC();
    call RelAddr7_4;
}

# 0xD380 0x0000    cntx_s 
:cntx_s        is op_0015=0xD380 unimpl

# 0xD390 0x0000    cntx_r 
:cntx_r        is op_0015=0xD390 unimpl

# 0x4580 0x000F    ret At<Cond, 0>,
:ret    Cond_0    is Cond_0 & op_0415=0x458 
{
    PopPC();
    return [pc];
}

# 0xD780 0x0000    retd 
:retd        is op_0015=0xD780 unimpl

# 0x45C0 0x000F    reti At<Cond, 0>,
:reti    Cond_0    is Cond_0 & op_0415=0x45C 
{
    if(!Cond_0) goto inst_next;

    IE = 1;
    PopPC();
    return [pc];
}

# 0x45D0 0x000F    retic At<Cond, 0>,
:retic    Cond_0    is Cond_0 & op_0415=0x45D unimpl

# 0xD7C0 0x0000    retid 
:retid        is op_0015=0xD7C0 unimpl

# 0xD3C3 0x0000    retidc 
:retidc        is op_0015=0xD3C3 unimpl

# 0x0900 0x00FF    rets At<Imm8, 0>,
:rets    Imm8_0    is Imm8_0 & op_0815=0x9
{
    PopPC();
    sp = sp + Imm8_0;
    return [pc];
}

# 0x4D80 0x0003    load_ps At<Imm2, 0>,
:load_ps    Imm2_0    is Imm2_0 & op_0215=0x1360 unimpl

# 0xDB80 0x007F    load_stepi At<Imm7s, 0>,
:load_stepi    Imm7s_0    is Imm7s_0 & op_0715=0x1B7 unimpl

# 0xDF80 0x007F    load_stepj At<Imm7s, 0>,
:load_stepj    Imm7s_0    is Imm7s_0 & op_0715=0x1BF unimpl

# 0x0400 0x00FF    load_page At<Imm8, 0>,
:load_page    Imm8_0    is Imm8_0 & op_0815=0x4
{
    PAGE = zext(Imm8_0:1);
}

# 0x0200 0x01FF    load_modi At<Imm9, 0>,
:load_modi    Imm9_0    is Imm9_0 & op_0915=0x1 unimpl

# 0x0A00 0x01FF    load_modj At<Imm9, 0>,
:load_modj    Imm9_0    is Imm9_0 & op_0915=0x5 unimpl

# 0xD7D8 0x0007    load_movpd At<Imm2, 1>,Unused<0>,
:load_movpd    Imm2_1    is Imm2_1 & Unused_0 & op_0315=0x1AFB unimpl

# 0x0010 0x000F    load_ps01 At<Imm4, 0>,
:load_ps01    Imm4_0    is Imm4_0 & op_0415=0x1 unimpl

# 0x5F40 0xFFFF0000    push At<Imm16, 16>,
:push    Imm16_16    is op_0015=0x5F40 ; Imm16_16 
{
    Push(Imm16_16:2);
}

# 0x5E40 0x001F    push At<Register, 0>,
with: op_0515=0x2F2
{
    :push    Register_0    is Register_0
    {
        Push(Register_0);
    }

    # 0x5E40 0x001F    push At<Ax, 0>,
    :push    RegToBus16_0    is RegToBus16_0
    {
        Push(RegToBus16_0);
    }

    # 0x5E40 0x001F    push At<Axlh, 0>,
    :push    RegToBus16Sat_0    is RegToBus16Sat_0
    {
        Push(RegToBus16Sat_0);
    }
}

# 0xD7C8 0x0007    push At<Abe, 1>,Unused<0>,
:push    Abe_1    is Abe_1 & Unused_0 & op_0315=0x1AF9 unimpl

# 0xD3D0 0x000F    push At<ArArpSttMod, 0>,
:push    ArArpSttMod_0    is ArArpSttMod_0 & op_0415=0xD3D 
{
    Push(ArArpSttMod_0);
}

# 0xD7FC 0x0003    push_prpage Unused<0>,Unused<1>,
:push   prpage    is prpage & Unused_0 & Unused_1 & op_0215=0x35FF 
{
    Push(zext(prpage));
}

# 0xD78C 0x0003    push At<Px, 1>,Unused<0>,
:push    Px_1    is Px_1 & Unused_0 & op_0215=0x35E3 unimpl

# 0xD4D7 0x0020    push_r6 Unused<5>,
:push_r6        is Unused_5 & op_0004=0x17 & op_0615=0x353 
{
    Push(r6);
}

# 0xD7F8 0x0003    push_repc Unused<0>,Unused<1>,
:push_repc        is Unused_0 & Unused_1 & op_0215=0x35FE 
{
    Push(repc);
}

# 0xD4D4 0x0020    push_x0 Unused<5>,
:push_x0        is Unused_5 & op_0004=0x14 & op_0615=0x353 
{
    Push(x0);
}

# 0xD4D5 0x0020    push_x1 Unused<5>,
:push_x1        is Unused_5 & op_0004=0x15 & op_0615=0x353 
{
    Push(x1);
}

# 0xD4D6 0x0020    push_y1 Unused<5>,
:push_y1        is Unused_5 & op_0004=0x16 & op_0615=0x353 
{
    Push(y1);
}

# 0x4384 0x0043    pusha At<Ax, 6>,Unused<0>,Unused<1>,
:pusha    Ax_6    is Ax_6 & Unused_0 & Unused_1 & op_0205=0x1 & op_0715=0x87 unimpl

# 0xD788 0x0003    pusha At<Bx, 1>,Unused<0>,
:pusha    Bx_1    is Bx_1 & Unused_0 & op_0215=0x35E2 unimpl

# 0x5E60 0x001F    pop At<Register, 0>,
with: op_0515=0x2F3 
{
    :pop    Register_0    is Register_0
    {
        Pop(Register_0);
    }
    :pop    RegisterAx_0    is RegisterAx_0
    {
        local tmp:2 = 0;
        Pop(tmp);
        SatAndSetAccAndFlag(RegisterAx_0, sext(tmp));
    }
    :pop    RegisterGetAccAbl_0    is RegisterGetAccAbl_0
    {
        local tmp:2 = 0;
        Pop(tmp);
        SatAndSetAccAndFlag(RegisterGetAccAbl_0, zext(tmp));
    }
    :pop    RegisterGetAccAbh_0    is RegisterGetAccAbh_0
    {
        local tmp:2 = 0;
        Pop(tmp);
        SatAndSetAccAndFlag(RegisterGetAccAbh_0, sext(tmp) << 16);
    }
}

# 0x47B4 0x0003    pop At<Abe, 0>,
:pop    Abe_0    is Abe_0 & op_0215=0x11ED unimpl

# 0x80C7 0x0F00    pop At<ArArpSttMod, 8>,
:pop    ArArpSttMod_8    is ArArpSttMod_8 & op_0007=0xC7 & op_1215=0x8 
{
    Pop(ArArpSttMod_8);
}

# 0x0006 0x0021    pop At<Bx, 5>,Unused<0>,
:pop    Bx_5    is Bx_5 & Unused_0 & op_0104=0x3 & op_0615=0x0 
{
    local tmp:2 = 0;
    Pop(tmp);
    SatAndSetAccAndFlag(Bx_5, sext(tmp));
}

# 0xD7F4 0x0003    pop_prpage Unused<0>,Unused<1>,
:pop    prpage    is prpage & Unused_0 & Unused_1 & op_0215=0x35FD 
{
    local tmp:2 = 0;
    Pop(tmp);
    prpage = tmp[0,8];
}

# 0xD496 0x0001    pop At<Px, 0>,
:pop    Px_0    is Px_0 & op_0115=0x6A4B 
{
    local h:2;
    local l:2;
    Pop(h);
    Pop(l);

    local value:4 = (zext(h) << 16) | zext(l);
    ProductFromBus32(Px_0, value);
}

# 0x0024 0x0001    pop_r6 Unused<0>,
:pop    r6    is r6 & Unused_0 & op_0115=0x12 
{
    Pop(r6);
}

# 0xD7F0 0x0003    pop_repc Unused<0>,Unused<1>,
:pop    repc    is repc & Unused_0 & Unused_1 & op_0215=0x35FC 
{
    Pop(repc);
}

# 0xD494 0x0000    pop_x0 
:pop    x0    is x0 & op_0015=0xD494 
{
    Pop(x0);
}

# 0xD495 0x0000    pop_x1 
:pop    x1    is x1 & op_0015=0xD495 
{
    Pop(x1);
}

# 0x0004 0x0001    pop_y1 Unused<0>,
:pop    y1    is y1 & Unused_0 & op_0115=0x2 
{
    Pop(y1);
}

# 0x47B0 0x0003    popa At<Ab, 0>,
:popa    Ab_0    is Ab_0 & op_0215=0x11EC unimpl

# 0x0C00 0x00FF    rep At<Imm8, 0>,
:rep    Imm8_0    is Imm8_0 & op_0815=0xC unimpl

# 0x0D00 0x001F    rep At<Register, 0>,
:rep    Register_0    is Register_0 & op_0515=0x68 unimpl

# 0x0002 0x0001    rep_r6 Unused<0>,
:rep_r6        is Unused_0 & op_0115=0x1 unimpl

# 0xD280 0x0C6F    shfc At<Ab, 10>,At<Ab, 5>,At<Cond, 0>,
:shfc    Ab_10,Ab_5,Cond_0    is Ab_10 & Ab_5 & Cond_0 & op_0404=0x0 & op_0709=0x5 & op_1215=0xD unimpl

# 0x9240 0x0DBF    shfi At<Ab, 10>,At<Ab, 7>,At<Imm6s, 0>,
with :op_0606=0x1 & op_0909=0x1 & op_1215=0x9
{
    # op_0505 is the sign bit for Imm6s_0
    # left shift
    :shfi    Ab_10,Ab_7,Imm6s_0    is Ab_10 & Ab_7 & Imm6s_0 & op_0505=0x0
    {
        ShiftBus40Left(Ab_10, Imm6s_0, Ab_7);
    }
    # right shift
    :shfi    Ab_10,Ab_7,Imm6s_0    is Ab_10 & Ab_7 & Imm6s_0 & op_0505=0x1
    {
        local nsv:2 = 0 - Imm6s_0;
        ShiftBus40Right(Ab_10, nsv, Ab_7);
    }
}

# 0x80C1 0x0F00    tst4b At<ArRn2, 10>,At<ArStep2, 8>,
:tst4b    ArRn2_10,ArStep2_8    is ArRn2_10 & ArStep2_8 & op_0007=0xC1 & op_1215=0x8 unimpl

# 0x4780 0x001F    tst4b At<ArRn2, 2>,At<ArStep2, 0>,At<Ax, 4>,
:tst4b    ArRn2_2,ArStep2_0,Ax_4    is ArRn2_2 & ArStep2_0 & Ax_4 & op_0515=0x23C unimpl

# 0xF000 0x0FFF    tstb At<MemImm8, 0>,At<Imm4, 8>,
:tstb    MemImm8_0,Imm4_8    is MemImm8_0 & Imm4_8 & op_1215=0xF unimpl

# 0x9020 0x0F1F    tstb At<Rn, 0>,At<StepZIDS, 3>,At<Imm4, 8>,
:tstb    Rn_0,StepZIDS_3,Imm4_8    is Rn_0 & StepZIDS_3 & Imm4_8 & op_0507=0x1 & op_1215=0x9 unimpl

# 0x9000 0x0F1F    tstb At<Register, 0>,At<Imm4, 8>,
:tstb    Register_0,Imm4_8    is Register_0 & Imm4_8 & op_0507=0x0 & op_1215=0x9 unimpl

# 0x9018 0x0F00    tstb_r6 At<Imm4, 8>,
:tstb_r6    Imm4_8    is Imm4_8 & op_0007=0x18 & op_1215=0x9 unimpl

# 0x0028 0xFFFF0007    tstb At<SttMod, 0>,At<Imm16, 16>,
:tstb    SttMod_0,Imm16_16    is SttMod_0 & op_0315=0x5 ; Imm16_16 unimpl

# 0x6770 0x100F    and_ At<Ab, 2>,At<Ab, 0>,At<Ax, 12>,
:and_    Ab_2,Ab_0,Ax_12    is Ab_2 & Ab_0 & Ax_12 & op_0411=0x77 & op_1315=0x3 unimpl

# 0x43C0 0x0000    dint 
:dint        is op_0015=0x43C0 unimpl

# 0x4380 0x0000    eint 
:eint        is op_0015=0x4380 unimpl

# 0x9460 0x0001    exp At<Bx, 0>,
:exp    Bx_0    is Bx_0 & op_0115=0x4A30 unimpl

# 0x9060 0x0101    exp At<Bx, 0>,At<Ax, 8>,
:exp    Bx_0,Ax_8    is Bx_0 & Ax_8 & op_0107=0x30 & op_0915=0x48 unimpl

# 0x9C40 0x001F    exp At<Rn, 0>,At<StepZIDS, 3>,
:exp    Rn_0,StepZIDS_3    is Rn_0 & StepZIDS_3 & op_0515=0x4E2 unimpl

# 0x9840 0x011F    exp At<Rn, 0>,At<StepZIDS, 3>,At<Ax, 8>,
:exp    Rn_0,StepZIDS_3,Ax_8    is Rn_0 & StepZIDS_3 & Ax_8 & op_0507=0x2 & op_0915=0x4C unimpl

# 0x9440 0x001F    exp At<Register, 0>,
:exp    Register_0    is Register_0 & op_0515=0x4A2 unimpl

# 0x9040 0x011F    exp At<Register, 0>,At<Ax, 8>,
:exp    Register_0,Ax_8    is Register_0 & Ax_8 & op_0507=0x2 & op_0915=0x48 unimpl

# 0xD7C1 0x0000    exp_r6 
:exp_r6        is op_0015=0xD7C1 unimpl

# 0xD382 0x0010    exp_r6 At<Ax, 4>,
:exp_r6    Ax_4    is Ax_4 & op_0003=0x2 & op_0515=0x69C unimpl

# 0x0080 0x001F    modr At<Rn, 0>,At<StepZIDS, 3>,
:modr    Rn_0,StepZIDS_3    is Rn_0 & StepZIDS_3 & op_0515=0x4 unimpl

# 0x00A0 0x001F    modr_dmod At<Rn, 0>,At<StepZIDS, 3>,
:modr_dmod    Rn_0,StepZIDS_3    is Rn_0 & StepZIDS_3 & op_0515=0x5 unimpl

# 0x4990 0x0007    modr_i2 At<Rn, 0>,
:modr_i2    Rn_0    is Rn_0 & op_0315=0x932 unimpl

# 0x4998 0x0007    modr_i2_dmod At<Rn, 0>,
:modr_i2_dmod    Rn_0    is Rn_0 & op_0315=0x933 unimpl

# 0x5DA0 0x0007    modr_d2 At<Rn, 0>,
:modr_d2    Rn_0    is Rn_0 & op_0315=0xBB4 unimpl

# 0x5DA8 0x0007    modr_d2_dmod At<Rn, 0>,
:modr_d2_dmod    Rn_0    is Rn_0 & op_0315=0xBB5 unimpl

# 0xD294 0x0C63    modr_eemod At<ArpRn2, 10>,At<ArpStep2, 0>,At<ArpStep2, 5>,
:modr_eemod    ArpRn2_10,ArpStep2_0,ArpStep2_5    is ArpRn2_10 & ArpStep2_0 & ArpStep2_5 & op_0204=0x5 & op_0709=0x5 & op_1215=0xD unimpl

# 0x0D80 0x007E    modr_edmod At<ArpRn2, 5>,At<ArpStep2, 1>,At<ArpStep2, 3>,
:modr_edmod    ArpRn2_5,ArpStep2_1,ArpStep2_3    is ArpRn2_5 & ArpStep2_1 & ArpStep2_3 & op_0000=0x0 & op_0715=0x1B unimpl

# 0x8464 0x031B    modr_demod At<ArpRn2, 8>,At<ArpStep2, 0>,At<ArpStep2, 3>,
:modr_demod    ArpRn2_8,ArpStep2_0,ArpStep2_3    is ArpRn2_8 & ArpStep2_0 & ArpStep2_3 & op_0202=0x1 & op_0507=0x3 & op_1015=0x21 unimpl

# 0x0D81 0x007E    modr_ddmod At<ArpRn2, 5>,At<ArpStep2, 1>,At<ArpStep2, 3>,
:modr_ddmod    ArpRn2_5,ArpStep2_1,ArpStep2_3    is ArpRn2_5 & ArpStep2_1 & ArpStep2_3 & op_0000=0x1 & op_0715=0x1B unimpl

# 0xD290 0x0C60    mov At<Ab, 10>,At<Ab, 5>,
:mov    Ab_10,Ab_5    is Ab_10 & Ab_5 & op_0004=0x10 & op_0709=0x5 & op_1215=0xD unimpl

# 0xD298 0x0C00    mov_dvm At<Abl, 10>,
:mov_dvm    Abl_10    is Abl_10 & op_0009=0x298 & op_1215=0xD unimpl

# 0xD2D8 0x0C00    mov_x0 At<Abl, 10>,
:mov_x0    Abl_10    is Abl_10 & op_0009=0x2D8 & op_1215=0xD unimpl

# 0xD394 0x0003    mov_x1 At<Abl, 0>,
:mov_x1    Abl_0    is Abl_0 & op_0215=0x34E5 unimpl

# 0xD384 0x0003    mov_y1 At<Abl, 0>,
:mov_y1    Abl_0    is Abl_0 & op_0215=0x34E1 unimpl

# 0x3000 0x0EFF    mov At<Ablh, 9>,At<MemImm8, 0>,
:mov    Ablh_9,MemImm8_0    is Ablh_9 & MemImm8_0 & op_0808=0x0 & op_1215=0x3 unimpl

# 0xD4BC 0xFFFF0100    mov At<Axl, 8>,At<MemImm16, 16>,
:mov    Axl_8,MemImm16_16    is Axl_8 & op_0007=0xBC & op_0915=0x6A ; MemImm16_16 unimpl

# 0xD49C 0xFFFF0100    mov At<Axl, 8>,At<MemR7Imm16, 16>,
:mov    Axl_8,MemR7Imm16_16    is Axl_8 & op_0007=0x9C & op_0915=0x6A ; MemR7Imm16_16 unimpl

# 0xDC80 0x017F    mov At<Axl, 8>,At<MemR7Imm7s, 0>,
:mov    Axl_8,MemR7Imm7s_0    is Axl_8 & MemR7Imm7s_0 & op_0707=0x1 & op_0915=0x6E unimpl

# 0xD4B8 0xFFFF0100    mov At<MemImm16, 16>,At<Ax, 8>,
:mov    MemImm16_16,Ax_8    is Ax_8 & op_0007=0xB8 & op_0915=0x6A ; MemImm16_16 unimpl

# 0x6100 0x18FF    mov At<MemImm8, 0>,At<Ab, 11>,
:mov    MemImm8_0,Ab_11    is MemImm8_0 & Ab_11 & op_0810=0x1 & op_1315=0x3 unimpl

# 0x6200 0x1CFF    mov At<MemImm8, 0>,At<Ablh, 10>,
:mov    MemImm8_0,Ablh_10    is MemImm8_0 & Ablh_10 & op_0809=0x2 & op_1315=0x3 unimpl

# 0x6500 0x10FF    mov_eu At<MemImm8, 0>,At<Axh, 12>,
:mov_eu    MemImm8_0,Axh_12    is MemImm8_0 & Axh_12 & op_0811=0x5 & op_1315=0x3 unimpl

# 0x6000 0x1CFF    mov At<MemImm8, 0>,At<RnOld, 10>,
:mov    MemImm8_0,RnOld_10    is MemImm8_0 & RnOld_10 & op_0809=0x0 & op_1315=0x3 unimpl

# 0x6D00 0x00FF    mov_sv At<MemImm8, 0>,
:mov_sv    MemImm8_0    is MemImm8_0 & op_0815=0x6D unimpl

# 0xD491 0x0060    mov_dvm_to At<Ab, 5>,
:mov_dvm_to    Ab_5    is Ab_5 & op_0004=0x11 & op_0715=0x1A9 unimpl

# 0xD492 0x0060    mov_icr_to At<Ab, 5>,
:mov_icr_to    Ab_5    is Ab_5 & op_0004=0x12 & op_0715=0x1A9 unimpl

# 0x5E20 0xFFFF0100    mov At<Imm16, 16>,At<Bx, 8>,
:mov    Imm16_16,Bx_8    is Bx_8 & op_0007=0x20 & op_0915=0x2F ; Imm16_16 unimpl

# 0x5E00 0xFFFF001F    mov At<Imm16, 16>,At<Register, 0>,
:mov    Imm16_16,Register_0    is Register_0 & op_0515=0x2F0 ; Imm16_16
{
    Register_0 = Imm16_16:2;
}
:mov    Imm16_16,RegisterAx_0    is RegisterAx_0 & op_0515=0x2F0 ; Imm16_16
{
    local tmp:2 = Imm16_16;
    SatAndSetAccAndFlag(RegisterAx_0, sext(tmp));
}
:mov    Imm16_16,RegisterGetAccAbl_0    is RegisterGetAccAbl_0 & op_0515=0x2F0 ; Imm16_16
{
    local tmp:2 = Imm16_16;
    SatAndSetAccAndFlag(RegisterGetAccAbl_0, zext(tmp));
}
:mov    Imm16_16,RegisterGetAccAbh_0    is RegisterGetAccAbh_0 & op_0515=0x2F0 ; Imm16_16
{
    local tmp:2 = Imm16_16;
    SatAndSetAccAndFlag(RegisterGetAccAbh_0, sext(tmp) << 16);
}

# 0x4F80 0x001F    mov_icr At<Imm5, 0>,
:mov_icr    Imm5_0    is Imm5_0 & op_0515=0x27C unimpl

# 0x2500 0x10FF    mov At<Imm8s, 0>,At<Axh, 12>,
:mov    Imm8s_0,Axh_12    is Imm8s_0 & Axh_12 & op_0811=0x5 & op_1315=0x1 unimpl

# 0x2900 0x00FF    mov_ext0 At<Imm8s, 0>,
:mov_ext0    Imm8s_0    is Imm8s_0 & op_0815=0x29 unimpl

# 0x2D00 0x00FF    mov_ext1 At<Imm8s, 0>,
:mov_ext1    Imm8s_0    is Imm8s_0 & op_0815=0x2D unimpl

# 0x3900 0x00FF    mov_ext2 At<Imm8s, 0>,
:mov_ext2    Imm8s_0    is Imm8s_0 & op_0815=0x39 unimpl

# 0x3D00 0x00FF    mov_ext3 At<Imm8s, 0>,
:mov_ext3    Imm8s_0    is Imm8s_0 & op_0815=0x3D unimpl

# 0x2300 0x1CFF    mov At<Imm8s, 0>,At<RnOld, 10>,
:mov    Imm8s_0,RnOld_10    is Imm8s_0 & RnOld_10 & op_0809=0x3 & op_1315=0x1 unimpl

# 0x0500 0x00FF    mov_sv At<Imm8s, 0>,
:mov_sv    Imm8s_0    is Imm8s_0 & op_0815=0x5 unimpl

# 0x2100 0x10FF    mov At<Imm8, 0>,At<Axl, 12>,
:mov    Imm8_0,GetAccAxl_12    is Imm8_0 & GetAccAxl_12 & op_0811=0x1 & op_1315=0x1 
{
    local Imm8:5 = Imm8_0;
    SetAccFlag(Imm8);
    GetAccAxl_12 = Imm8;
}

# 0xD498 0xFFFF0100    mov At<MemR7Imm16, 16>,At<Ax, 8>,
:mov    MemR7Imm16_16,Ax_8    is Ax_8 & op_0007=0x98 & op_0915=0x6A ; MemR7Imm16_16 unimpl

# 0xD880 0x017F    mov At<MemR7Imm7s, 0>,At<Ax, 8>,
:mov    MemR7Imm7s_0,Ax_8    is MemR7Imm7s_0 & Ax_8 & op_0707=0x1 & op_0915=0x6C unimpl

# 0x98C0 0x011F    mov At<Rn, 0>,At<StepZIDS, 3>,At<Bx, 8>,
:mov    Rn_0,StepZIDS_3,Bx_8    is Rn_0 & StepZIDS_3 & Bx_8 & op_0507=0x6 & op_0915=0x4C unimpl

# 0x1C00 0x03FF    mov At<Rn, 0>,At<StepZIDS, 3>,At<Register, 5>,
:mov    Rn_0,StepZIDS_3,Register_5    is Rn_0 & StepZIDS_3 & Register_5 & op_1015=0x7 unimpl

# 0x47E0 0x001F    mov_memsp_to At<Register, 0>,
:mov_memsp_to    Register_0    is Register_0 & op_0515=0x23F unimpl

# 0x47C0 0x001F    mov_mixp_to At<Register, 0>,
:mov_mixp_to    Register_0    is Register_0 & op_0515=0x23E unimpl

# 0x2000 0x0EFF    mov At<RnOld, 9>,At<MemImm8, 0>,
:mov    RnOld_9,MemImm8_0    is RnOld_9 & MemImm8_0 & op_0808=0x0 & op_1215=0x2 unimpl

# 0x4FC0 0x001F    mov_icr At<Register, 0>,
:mov_icr    Register_0    is Register_0 & op_0515=0x27E unimpl

# 0x5E80 0x001F    mov_mixp At<Register, 0>,
:mov_mixp    Register_0    is Register_0 & op_0515=0x2F4 unimpl

# 0x1800 0x03FF    mov At<Register, 5>,At<Rn, 0>,At<StepZIDS, 3>,
:mov    Register_5,Rn_0,StepZIDS_3    is Register_5 & Rn_0 & StepZIDS_3 & op_1015=0x6 unimpl

# 0x5EC0 0x003F    mov At<Register, 0>,At<Bx, 5>,
:mov    Register_0,Bx_5    is Register_0 & Bx_5 & op_0615=0x17B unimpl

# 0x5800 0x03FF    mov At<Register, 0>,At<Register, 5>,
with: op_1015=0x16 
{
    :mov    Register_0,Register_5    is Register_0 & Register_5 unimpl

    :mov    RegToBus16Sat_0,Register_5    is RegToBus16Sat_0 & Register_5 
    {
        Register_5 = RegToBus16Sat_0:2;
    }
}

# 0xD490 0x0060    mov_repc_to At<Ab, 5>,
:mov_repc_to    Ab_5    is Ab_5 & op_0004=0x10 & op_0715=0x1A9 unimpl

# 0x7D00 0x00FF    mov_sv_to At<MemImm8, 0>,
:mov_sv_to    MemImm8_0    is MemImm8_0 & op_0815=0x7D unimpl

# 0xD493 0x0060    mov_x0_to At<Ab, 5>,
:mov_x0_to    Ab_5    is Ab_5 & op_0004=0x13 & op_0715=0x1A9 unimpl

# 0x49C1 0x0030    mov_x1_to At<Ab, 4>,
:mov_x1_to    Ab_4    is Ab_4 & op_0003=0x1 & op_0615=0x127 unimpl

# 0xD299 0x0C00    mov_y1_to At<Ab, 10>,
:mov_y1_to    Ab_10    is Ab_10 & op_0009=0x299 & op_1215=0xD unimpl

# 0x0008 0xFFFF0007    mov At<Imm16, 16>,At<ArArp, 0>,
:mov    Imm16_16,ArArp_0    is ArArp_0 & op_0315=0x1 ; Imm16_16 unimpl

# 0x0023 0xFFFF0000    mov_r6 At<Imm16, 16>,
:mov_r6    Imm16_16    is op_0015=0x23 ; Imm16_16 unimpl

# 0x0001 0xFFFF0000    mov_repc At<Imm16, 16>,
:mov_repc    Imm16_16    is op_0015=0x1 ; Imm16_16 unimpl

# 0x8971 0xFFFF0000    mov_stepi0 At<Imm16, 16>,
:mov_stepi0    Imm16_16    is op_0015=0x8971 ; Imm16_16 unimpl

# 0x8979 0xFFFF0000    mov_stepj0 At<Imm16, 16>,
:mov_stepj0    Imm16_16    is op_0015=0x8979 ; Imm16_16 unimpl

# 0x0030 0xFFFF0007    mov At<Imm16, 16>,At<SttMod, 0>,
:mov    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x6 ; Imm16_16 unimpl

# 0x5DD0 0x000F    mov_prpage At<Imm4, 0>,
:mov_prpage    Imm4_0    is Imm4_0 & op_0415=0x5DD unimpl

# 0x5F80 0x007F    movd At<R0123, 0>,At<StepZIDS, 3>,At<R45, 2>,At<StepZIDS, 5>,
:movd    R0123_0,StepZIDS_3,R45_2,StepZIDS_5    is R0123_0 & StepZIDS_3 & R45_2 & StepZIDS_5 & op_0715=0xBF unimpl

# 0x0040 0x003F    movp At<Axl, 5>,At<Register, 0>,
:movp    Axl_5,Register_0    is Axl_5 & Register_0 & op_0615=0x1 unimpl

# 0x0D40 0x003F    movp At<Ax, 5>,At<Register, 0>,
:movp    Ax_5,Register_0    is Ax_5 & Register_0 & op_0615=0x35 unimpl

# 0x0600 0x01FF    movp At<Rn, 0>,At<StepZIDS, 3>,At<R0123, 5>,At<StepZIDS, 7>,
:movp    Rn_0,StepZIDS_3,R0123_5,StepZIDS_7    is Rn_0 & StepZIDS_3 & R0123_5 & StepZIDS_7 & op_0915=0x3 unimpl

# 0xD499 0x0100    movpdw At<Ax, 8>,
:movpdw    Ax_8    is Ax_8 & op_0007=0x99 & op_0915=0x6A unimpl

# 0xD49B 0x0000    mov_a0h_stepi0 
:mov_a0h_stepi0        is op_0015=0xD49B unimpl

# 0xD59B 0x0000    mov_a0h_stepj0 
:mov_a0h_stepj0        is op_0015=0xD59B unimpl

# 0xD482 0x0000    mov_stepi0_a0h 
:mov_stepi0_a0h        is op_0015=0xD482 unimpl

# 0xD582 0x0000    mov_stepj0_a0h 
:mov_stepj0_a0h        is op_0015=0xD582 unimpl

# 0x9164 0x0003    mov_prpage At<Abl, 0>,
:mov_prpage    Abl_0    is Abl_0 & op_0215=0x2459 unimpl

# 0x9064 0x0003    mov_repc At<Abl, 0>,
:mov_repc    Abl_0    is Abl_0 & op_0215=0x2419 unimpl

# 0x9540 0x001F    mov At<Abl, 3>,At<ArArp, 0>,
:mov    Abl_3,ArArp_0    is Abl_3 & ArArp_0 & op_0515=0x4AA unimpl

# 0x9C60 0x001F    mov At<Abl, 3>,At<SttMod, 0>,
:mov    Abl_3,SttMod_0    is Abl_3 & SttMod_0 & op_0515=0x4E3 unimpl

# 0x5EB0 0x0003    mov_prpage_to At<Abl, 0>,
:mov_prpage_to    Abl_0    is Abl_0 & op_0215=0x17AC unimpl

# 0xD2D9 0x0C00    mov_repc_to At<Abl, 10>,
:mov_repc_to    Abl_10    is Abl_10 & op_0009=0x2D9 & op_1215=0xD unimpl

# 0x9560 0x001F    mov At<ArArp, 0>,At<Abl, 3>,
:mov    ArArp_0,Abl_3    is ArArp_0 & Abl_3 & op_0515=0x4AB unimpl

# 0xD2F8 0x0C07    mov At<SttMod, 0>,At<Abl, 10>,
:mov    SttMod_0,Abl_10    is SttMod_0 & Abl_10 & op_0309=0x5F & op_1215=0xD unimpl

# 0xD7D0 0x0003    mov_repc_to At<ArRn1, 1>,At<ArStep1, 0>,
:mov_repc_to    ArRn1_1,ArStep1_0    is ArRn1_1 & ArStep1_0 & op_0215=0x35F4 unimpl

# 0xD488 0x0127    mov At<ArArp, 0>,At<ArRn1, 8>,At<ArStep1, 5>,
:mov    ArArp_0,ArRn1_8,ArStep1_5    is ArArp_0 & ArRn1_8 & ArStep1_5 & op_0304=0x1 & op_0607=0x2 & op_0915=0x6A unimpl

# 0x49A0 0x001F    mov At<SttMod, 0>,At<ArRn1, 4>,At<ArStep1, 3>,
:mov    SttMod_0,ArRn1_4,ArStep1_3    is SttMod_0 & ArRn1_4 & ArStep1_3 & op_0515=0x24D unimpl

# 0xD7D4 0x0003    mov_repc At<ArRn1, 1>,At<ArStep1, 0>,
:mov_repc    ArRn1_1,ArStep1_0    is ArRn1_1 & ArStep1_0 & op_0215=0x35F5 unimpl

# 0x8062 0x0718    mov At<ArRn1, 4>,At<ArStep1, 3>,At<ArArp, 8>,
:mov    ArRn1_4,ArStep1_3,ArArp_8    is ArRn1_4 & ArStep1_3 & ArArp_8 & op_0002=0x2 & op_0507=0x3 & op_1115=0x10 unimpl

# 0x8063 0x0718    mov At<ArRn1, 4>,At<ArStep1, 3>,At<SttMod, 8>,
:mov    ArRn1_4,ArStep1_3,SttMod_8    is ArRn1_4 & ArStep1_3 & SttMod_8 & op_0002=0x3 & op_0507=0x3 & op_1115=0x10 unimpl

# 0xD3C8 0xFFFF0007    mov_repc_to At<MemR7Imm16, 16>,Unused<0>,Unused<1>,Unused<2>,
:mov_repc_to    MemR7Imm16_16    is Unused_0 & Unused_1 & Unused_2 & op_0315=0x1A79 ; MemR7Imm16_16 unimpl

# 0x5F50 0xFFFF000F    mov At<ArArpSttMod, 0>,At<MemR7Imm16, 16>,
:mov    ArArpSttMod_0,MemR7Imm16_16    is ArArpSttMod_0 & op_0415=0x5F5 ; MemR7Imm16_16 unimpl

# 0xD2DC 0xFFFF0403    mov_repc At<MemR7Imm16, 16>,Unused<0>,Unused<1>,Unused<10>,
:mov_repc    MemR7Imm16_16    is Unused_0 & Unused_1 & Unused_10 & op_0209=0xB7 & op_1115=0x1A ; MemR7Imm16_16 unimpl

# 0x4D90 0xFFFF000F    mov At<MemR7Imm16, 16>,At<ArArpSttMod, 0>,
:mov    MemR7Imm16_16,ArArpSttMod_0    is ArArpSttMod_0 & op_0415=0x4D9 ; MemR7Imm16_16 unimpl

# 0x886B 0x0100    mov_pc At<Ax, 8>,
:mov_pc    Ax_8    is Ax_8 & op_0007=0x6B & op_0915=0x44 unimpl

# 0x8863 0x0100    mov_pc At<Bx, 8>,
:mov_pc    Bx_8    is Bx_8 & op_0007=0x63 & op_0915=0x44 unimpl

# 0x8A73 0x0008    mov_mixp_to At<Bx, 3>,
:mov_mixp_to    Bx_3    is Bx_3 & op_0002=0x3 & op_0415=0x8A7 unimpl

# 0x4381 0x0000    mov_mixp_r6 
:mov_mixp_r6        is op_0015=0x4381 unimpl

# 0x4382 0x0001    mov_p0h_to At<Bx, 0>,
:mov_p0h_to    Bx_0    is Bx_0 & op_0115=0x21C1 unimpl

# 0xD3C2 0x0000    mov_p0h_r6 
:mov_p0h_r6        is op_0015=0xD3C2 unimpl

# 0x4B60 0x001F    mov_p0h_to At<Register, 0>,
:mov_p0h_to    Register_0    is Register_0 & op_0515=0x25B unimpl

# 0x8FD4 0x0003    mov_p0 At<Ab, 0>,
:mov_p0    Ab_0    is Ab_0 & op_0215=0x23F5 unimpl

# 0x8FD8 0x0003    mov_p1_to At<Ab, 0>,
:mov_p1_to    Ab_0    is Ab_0 & op_0215=0x23F6 unimpl

# 0x88D0 0x030E    mov2 At<Px, 1>,At<ArRn2, 8>,At<ArStep2, 2>,
:mov2    Px_1,ArRn2_8,ArStep2_2    is Px_1 & ArRn2_8 & ArStep2_2 & op_0000=0x0 & op_0407=0xD & op_1015=0x22 unimpl

# 0x88D1 0x030E    mov2s At<Px, 1>,At<ArRn2, 8>,At<ArStep2, 2>,
:mov2s    Px_1,ArRn2_8,ArStep2_2    is Px_1 & ArRn2_8 & ArStep2_2 & op_0000=0x1 & op_0407=0xD & op_1015=0x22 unimpl

# 0xD292 0x0C61    mov2 At<ArRn2, 10>,At<ArStep2, 5>,At<Px, 0>,
:mov2    ArRn2_10,ArStep2_5,Px_0    is ArRn2_10 & ArStep2_5 & Px_0 & op_0104=0x9 & op_0709=0x5 & op_1215=0xD unimpl

# 0x4DC0 0x003F    mova At<Ab, 4>,At<ArRn2, 2>,At<ArStep2, 0>,
:mova    Ab_4,ArRn2_2,ArStep2_0    is Ab_4 & ArRn2_2 & ArStep2_0 & op_0615=0x137 unimpl

# 0x4BC0 0x003F    mova At<ArRn2, 2>,At<ArStep2, 0>,At<Ab, 4>,
:mova    ArRn2_2,ArStep2_0,Ab_4    is ArRn2_2 & ArStep2_0 & Ab_4 & op_0615=0x12F unimpl

# 0xD481 0x0100    mov_r6_to At<Bx, 8>,
:mov_r6_to    Bx_8    is Bx_8 & op_0007=0x81 & op_0915=0x6A unimpl

# 0x43C1 0x0000    mov_r6_mixp 
:mov_r6_mixp        is op_0015=0x43C1 unimpl

# 0x5F00 0x001F    mov_r6_to At<Register, 0>,
:mov_r6_to    Register_0    is Register_0 & op_0515=0x2F8 unimpl

# 0x5F60 0x001F    mov_r6 At<Register, 0>,
:mov_r6    Register_0    is Register_0 & op_0515=0x2FB unimpl

# 0xD29C 0x0403    mov_memsp_r6 Unused<0>,Unused<1>,Unused<10>,
:mov_memsp_r6        is Unused_0 & Unused_1 & Unused_10 & op_0209=0xA7 & op_1115=0x1A unimpl

# 0x1B00 0x001F    mov_r6_to At<Rn, 0>,At<StepZIDS, 3>,
:mov_r6_to    Rn_0,StepZIDS_3    is Rn_0 & StepZIDS_3 & op_0515=0xD8 unimpl

# 0x1B20 0x001F    mov_r6 At<Rn, 0>,At<StepZIDS, 3>,
:mov_r6    Rn_0,StepZIDS_3    is Rn_0 & StepZIDS_3 & op_0515=0xD9 unimpl

# 0x6300 0x18FF    movs At<MemImm8, 0>,At<Ab, 11>,
:movs    MemImm8_0,Ab_11    is MemImm8_0 & Ab_11 & op_0810=0x3 & op_1315=0x3 unimpl

# 0x0180 0x007F    movs At<Rn, 0>,At<StepZIDS, 3>,At<Ab, 5>,
:movs    Rn_0,StepZIDS_3,Ab_5    is Rn_0 & StepZIDS_3 & Ab_5 & op_0715=0x3 unimpl

# 0x0100 0x007F    movs At<Register, 0>,At<Ab, 5>,
:movs    Register_0,Ab_5    is Register_0 & Ab_5 & op_0715=0x2 unimpl

# 0x5F42 0x0001    movs_r6_to At<Ax, 0>,
:movs_r6_to    Ax_0    is Ax_0 & op_0115=0x2FA1 unimpl

# 0x4080 0x0E7F    movsi At<RnOld, 9>,At<Ab, 5>,At<Imm5s, 0>,
:movsi    RnOld_9,Ab_5,Imm5s_0    is RnOld_9 & Ab_5 & Imm5s_0 & op_0708=0x1 & op_1215=0x4 unimpl

# 0x4390 0x004F    mov2_axh_m_y0_m At<Axh, 6>,At<ArRn2, 2>,At<ArStep2, 0>,
:mov2_axh_m_y0_m    Axh_6,ArRn2_2,ArStep2_0    is Axh_6 & ArRn2_2 & ArStep2_0 & op_0405=0x1 & op_0715=0x87 unimpl

# 0x43A0 0x001F    mov2_ax_mij At<Ab, 3>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:mov2_ax_mij    Ab_3,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ab_3 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0515=0x21D unimpl

# 0x43E0 0x001F    mov2_ax_mji At<Ab, 3>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:mov2_ax_mji    Ab_3,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ab_3 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0515=0x21F unimpl

# 0x80C4 0x0F01    mov2_mij_ax At<ArpRn1, 9>,At<ArpStep1, 0>,At<ArpStep1, 8>,At<Ab, 10>,
:mov2_mij_ax    ArpRn1_9,ArpStep1_0,ArpStep1_8,Ab_10    is ArpRn1_9 & ArpStep1_0 & ArpStep1_8 & Ab_10 & op_0107=0x62 & op_1215=0x8 unimpl

# 0xD4C0 0x002F    mov2_mji_ax At<ArpRn1, 5>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<Ab, 2>,
:mov2_mji_ax    ArpRn1_5,ArpStep1_0,ArpStep1_1,Ab_2    is ArpRn1_5 & ArpStep1_0 & ArpStep1_1 & Ab_2 & op_0404=0x0 & op_0615=0x353 unimpl

# 0x9D40 0x003F    mov2_abh_m At<Abh, 4>,At<Abh, 2>,At<ArRn1, 1>,At<ArStep1, 0>,
:mov2_abh_m    Abh_4,Abh_2,ArRn1_1,ArStep1_0    is Abh_4 & Abh_2 & ArRn1_1 & ArStep1_0 & op_0615=0x275 unimpl

# 0x8C60 0x031F    exchange_iaj At<Axh, 4>,At<ArpRn2, 8>,At<ArpStep2, 0>,At<ArpStep2, 2>,
:exchange_iaj    Axh_4,ArpRn2_8,ArpStep2_0,ArpStep2_2    is Axh_4 & ArpRn2_8 & ArpStep2_0 & ArpStep2_2 & op_0507=0x3 & op_1015=0x23 unimpl

# 0x7F80 0x007F    exchange_riaj At<Axh, 6>,At<ArpRn2, 4>,At<ArpStep2, 0>,At<ArpStep2, 2>,
:exchange_riaj    Axh_6,ArpRn2_4,ArpStep2_0,ArpStep2_2    is Axh_6 & ArpRn2_4 & ArpStep2_0 & ArpStep2_2 & op_0715=0xFF unimpl

# 0x4900 0x007F    exchange_jai At<Axh, 6>,At<ArpRn2, 4>,At<ArpStep2, 0>,At<ArpStep2, 2>,
:exchange_jai    Axh_6,ArpRn2_4,ArpStep2_0,ArpStep2_2    is Axh_6 & ArpRn2_4 & ArpStep2_0 & ArpStep2_2 & op_0715=0x92 unimpl

# 0x4800 0x007F    exchange_rjai At<Axh, 6>,At<ArpRn2, 4>,At<ArpStep2, 0>,At<ArpStep2, 2>,
:exchange_rjai    Axh_6,ArpRn2_4,ArpStep2_0,ArpStep2_2    is Axh_6 & ArpRn2_4 & ArpStep2_0 & ArpStep2_2 & op_0715=0x90 unimpl

# 0x8864 0x031B    movr At<ArRn2, 3>,At<ArStep2, 0>,At<Abh, 8>,
:movr    ArRn2_3,ArStep2_0,Abh_8    is ArRn2_3 & ArStep2_0 & Abh_8 & op_0202=0x1 & op_0507=0x3 & op_1015=0x22 unimpl

# 0x9CE0 0x011F    movr At<Rn, 0>,At<StepZIDS, 3>,At<Ax, 8>,
:movr    Rn_0,StepZIDS_3,Ax_8    is Rn_0 & StepZIDS_3 & Ax_8 & op_0507=0x7 & op_0915=0x4E unimpl

# 0x9CC0 0x011F    movr At<Register, 0>,At<Ax, 8>,
:movr    Register_0,Ax_8    is Register_0 & Ax_8 & op_0507=0x6 & op_0915=0x4E unimpl

# 0x5DF4 0x0003    movr At<Bx, 1>,At<Ax, 0>,
:movr    Bx_1,Ax_0    is Bx_1 & Ax_0 & op_0215=0x177D unimpl

# 0x8961 0x0008    movr_r6_to At<Ax, 3>,
:movr_r6_to    Ax_3    is Ax_3 & op_0002=0x1 & op_0415=0x896 unimpl

# 0x49C0 0x0030    lim At<Ax, 5>,At<Ax, 4>,
:lim    Ax_5,Ax_4    is Ax_5 & Ax_4 & op_0003=0x0 & op_0615=0x127 unimpl

# 0x5F45 0x0000    vtrclr0 
:vtrclr0        is op_0015=0x5F45 unimpl

# 0x5F46 0x0000    vtrclr1 
:vtrclr1        is op_0015=0x5F46 unimpl

# 0x5F47 0x0000    vtrclr 
:vtrclr        is op_0015=0x5F47 unimpl

# 0xD29A 0x0001    vtrmov0 At<Axl, 0>,
:vtrmov0    Axl_0    is Axl_0 & op_0115=0x694D unimpl

# 0xD69A 0x0001    vtrmov1 At<Axl, 0>,
:vtrmov1    Axl_0    is Axl_0 & op_0115=0x6B4D unimpl

# 0xD383 0x0010    vtrmov At<Axl, 4>,
:vtrmov    Axl_4    is Axl_4 & op_0003=0x3 & op_0515=0x69C unimpl

# 0xD781 0x0000    vtrshr 
:vtrshr        is op_0015=0xD781 unimpl

# 0x5DFE 0x0000    clrp0 
:clrp0        is op_0015=0x5DFE unimpl

# 0x5DFD 0x0000    clrp1 
:clrp1        is op_0015=0x5DFD unimpl

# 0x5DFF 0x0000    clrp 
:clrp        is op_0015=0x5DFF unimpl

# 0x8460 0x0118    max_ge At<Ax, 8>,At<StepZIDS, 3>,
:max_ge    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x42 unimpl

# 0x8660 0x0118    max_gt At<Ax, 8>,At<StepZIDS, 3>,
:max_gt    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x43 unimpl

# 0x8860 0x0118    min_le At<Ax, 8>,At<StepZIDS, 3>,
:min_le    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x44 unimpl

# 0x8A60 0x0118    min_lt At<Ax, 8>,At<StepZIDS, 3>,
:min_lt    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x45 unimpl

# 0x8060 0x0118    max_ge_r0 At<Ax, 8>,At<StepZIDS, 3>,
:max_ge_r0    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x40 unimpl

# 0x8260 0x0118    max_gt_r0 At<Ax, 8>,At<StepZIDS, 3>,
:max_gt_r0    Ax_8,StepZIDS_3    is Ax_8 & StepZIDS_3 & op_0002=0x0 & op_0507=0x3 & op_0915=0x41 unimpl

# 0x47A0 0x000B    min_le_r0 At<Ax, 3>,At<StepZIDS, 0>,
:min_le_r0    Ax_3,StepZIDS_0    is Ax_3 & StepZIDS_0 & op_0202=0x0 & op_0415=0x47A unimpl

# 0x47A4 0x000B    min_lt_r0 At<Ax, 3>,At<StepZIDS, 0>,
:min_lt_r0    Ax_3,StepZIDS_0    is Ax_3 & StepZIDS_0 & op_0202=0x1 & op_0415=0x47A unimpl

# 0x0E00 0x01FF    divs At<MemImm8, 0>,At<Ax, 8>,
:divs    MemImm8_0,Ax_8    is MemImm8_0 & Ax_8 & op_0915=0x7 unimpl

# 0xD790 0x000F    sqr_sqr_add3 At<Ab, 2>,At<Ab, 0>,
:sqr_sqr_add3    Ab_2,Ab_0    is Ab_2 & Ab_0 & op_0415=0xD79 unimpl

# 0x4B00 0x003F    sqr_sqr_add3 At<ArRn2, 4>,At<ArStep2, 2>,At<Ab, 0>,
:sqr_sqr_add3    ArRn2_4,ArStep2_2,Ab_0    is ArRn2_4 & ArStep2_2 & Ab_0 & op_0615=0x12C unimpl

# 0x49C4 0x0033    sqr_mpysu_add3a At<Ab, 4>,At<Ab, 0>,
:sqr_mpysu_add3a    Ab_4,Ab_0    is Ab_4 & Ab_0 & op_0203=0x1 & op_0615=0x127 unimpl

# 0x4D8C 0x0003    cmp At<Ax, 1>,At<Bx, 0>,
:cmp    Ax_1,Bx_0    is Ax_1 & Bx_0 & op_0215=0x1363 unimpl

# 0xD483 0x0000    cmp_b0_b1 
:cmp_b0_b1        is op_0015=0xD483 unimpl

# 0xD583 0x0000    cmp_b1_b0 
:cmp_b1_b0        is op_0015=0xD583 unimpl

# 0xDA9A 0x0401    cmp At<Bx, 10>,At<Ax, 0>,
:cmp    Bx_10,Ax_0    is Bx_10 & Ax_0 & op_0109=0x14D & op_1115=0x1B unimpl

# 0x8B63 0x0010    cmp_p1_to At<Ax, 4>,
:cmp_p1_to    Ax_4    is Ax_4 & op_0003=0x3 & op_0515=0x45B unimpl

# 0x5E21 0x0100    max2_vtr At<Ax, 8>,
:max2_vtr    Ax_8    is Ax_8 & op_0007=0x21 & op_0915=0x2F unimpl

# 0x43C2 0x0001    min2_vtr At<Ax, 0>,
:min2_vtr    Ax_0    is Ax_0 & op_0115=0x21E1 unimpl

# 0xD784 0x0003    max2_vtr At<Ax, 1>,At<Bx, 0>,
:max2_vtr    Ax_1,Bx_0    is Ax_1 & Bx_0 & op_0215=0x35E1 unimpl

# 0xD4BA 0x0101    min2_vtr At<Ax, 8>,At<Bx, 0>,
:min2_vtr    Ax_8,Bx_0    is Ax_8 & Bx_0 & op_0107=0x5D & op_0915=0x6A unimpl

# 0x4A40 0x001B    max2_vtr_movl At<Ax, 3>,At<Bx, 4>,At<ArRn1, 1>,At<ArStep1, 0>,
:max2_vtr_movl    Ax_3,Bx_4,ArRn1_1,ArStep1_0    is Ax_3 & Bx_4 & ArRn1_1 & ArStep1_0 & op_0202=0x0 & op_0515=0x252 unimpl

# 0x4A44 0x001B    max2_vtr_movh At<Ax, 3>,At<Bx, 4>,At<ArRn1, 1>,At<ArStep1, 0>,
:max2_vtr_movh    Ax_3,Bx_4,ArRn1_1,ArStep1_0    is Ax_3 & Bx_4 & ArRn1_1 & ArStep1_0 & op_0202=0x1 & op_0515=0x252 unimpl

# 0x4A60 0x001B    max2_vtr_movl At<Bx, 4>,At<Ax, 3>,At<ArRn1, 1>,At<ArStep1, 0>,
:max2_vtr_movl    Bx_4,Ax_3,ArRn1_1,ArStep1_0    is Bx_4 & Ax_3 & ArRn1_1 & ArStep1_0 & op_0202=0x0 & op_0515=0x253 unimpl

# 0x4A64 0x001B    max2_vtr_movh At<Bx, 4>,At<Ax, 3>,At<ArRn1, 1>,At<ArStep1, 0>,
:max2_vtr_movh    Bx_4,Ax_3,ArRn1_1,ArStep1_0    is Bx_4 & Ax_3 & ArRn1_1 & ArStep1_0 & op_0202=0x1 & op_0515=0x253 unimpl

# 0x4A00 0x001B    min2_vtr_movl At<Ax, 3>,At<Bx, 4>,At<ArRn1, 1>,At<ArStep1, 0>,
:min2_vtr_movl    Ax_3,Bx_4,ArRn1_1,ArStep1_0    is Ax_3 & Bx_4 & ArRn1_1 & ArStep1_0 & op_0202=0x0 & op_0515=0x250 unimpl

# 0x4A04 0x001B    min2_vtr_movh At<Ax, 3>,At<Bx, 4>,At<ArRn1, 1>,At<ArStep1, 0>,
:min2_vtr_movh    Ax_3,Bx_4,ArRn1_1,ArStep1_0    is Ax_3 & Bx_4 & ArRn1_1 & ArStep1_0 & op_0202=0x1 & op_0515=0x250 unimpl

# 0x4A20 0x001B    min2_vtr_movl At<Bx, 4>,At<Ax, 3>,At<ArRn1, 1>,At<ArStep1, 0>,
:min2_vtr_movl    Bx_4,Ax_3,ArRn1_1,ArStep1_0    is Bx_4 & Ax_3 & ArRn1_1 & ArStep1_0 & op_0202=0x0 & op_0515=0x251 unimpl

# 0x4A24 0x001B    min2_vtr_movh At<Bx, 4>,At<Ax, 3>,At<ArRn1, 1>,At<ArStep1, 0>,
:min2_vtr_movh    Bx_4,Ax_3,ArRn1_1,ArStep1_0    is Bx_4 & Ax_3 & ArRn1_1 & ArStep1_0 & op_0202=0x1 & op_0515=0x251 unimpl

# 0xD590 0x0067    max2_vtr_movij At<Ax, 6>,At<Bx, 5>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:max2_vtr_movij    Ax_6,Bx_5,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ax_6 & Bx_5 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0304=0x2 & op_0715=0x1AB unimpl

# 0x45A0 0x001F    max2_vtr_movji At<Ax, 4>,At<Bx, 3>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:max2_vtr_movji    Ax_4,Bx_3,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ax_4 & Bx_3 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0515=0x22D unimpl

# 0xD2B8 0x0C07    min2_vtr_movij At<Ax, 11>,At<Bx, 10>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:min2_vtr_movij    Ax_11,Bx_10,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ax_11 & Bx_10 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0309=0x57 & op_1215=0xD unimpl

# 0x45E0 0x001F    min2_vtr_movji At<Ax, 4>,At<Bx, 3>,At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,
:min2_vtr_movji    Ax_4,Bx_3,ArpRn1_2,ArpStep1_0,ArpStep1_1    is Ax_4 & Bx_3 & ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & op_0515=0x22F unimpl

# 0x4B40 0x000D    mov_sv_app At<ArRn1, 3>,At<ArStep1, 2>,At<Bx, 0>,BSv,Sub,PP,Add,PP,
:mov_sv_app    ArRn1_3,ArStep1_2,Bx_0    is ArRn1_3 & ArStep1_2 & Bx_0 & op_0101=0x0 & op_0415=0x4B4 unimpl

# 0x9960 0x001C    mov_sv_app At<ArRn1, 4>,At<ArStep1Alt, 3>,At<Bx, 2>,BSv,Sub,PP,Add,PP,
:mov_sv_app    ArRn1_4,ArStep1Alt_3,Bx_2    is ArRn1_4 & ArStep1Alt_3 & Bx_2 & op_0001=0x0 & op_0515=0x4CB unimpl

# 0x4B42 0x000D    mov_sv_app At<ArRn1, 3>,At<ArStep1, 2>,At<Bx, 0>,BSr,Sub,PP,Add,PP,
:mov_sv_app    ArRn1_3,ArStep1_2,Bx_0    is ArRn1_3 & ArStep1_2 & Bx_0 & op_0101=0x1 & op_0415=0x4B4 unimpl

# 0x99E0 0x001C    mov_sv_app At<ArRn1, 4>,At<ArStep1Alt, 3>,At<Bx, 2>,BSr,Sub,PP,Add,PP,
:mov_sv_app    ArRn1_4,ArStep1Alt_3,Bx_2    is ArRn1_4 & ArStep1Alt_3 & Bx_2 & op_0001=0x0 & op_0515=0x4CF unimpl

# 0x5F4C 0x0003    mov_sv_app At<ArRn1, 1>,At<ArStep1, 0>,Const<Bx, 0>,BSv,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_1,ArStep1_0    is ArRn1_1 & ArStep1_0 & op_0215=0x17D3 unimpl

# 0x8873 0x0108    mov_sv_app At<ArRn1, 8>,At<ArStep1, 3>,Const<Bx, 1>,BSv,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_8,ArStep1_3    is ArRn1_8 & ArStep1_3 & op_0002=0x3 & op_0407=0x7 & op_0915=0x44 unimpl

# 0x9860 0x001C    mov_sv_app At<ArRn1, 4>,At<ArStep1Alt, 3>,At<Bx, 2>,BSv,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_4,ArStep1Alt_3,Bx_2    is ArRn1_4 & ArStep1Alt_3 & Bx_2 & op_0001=0x0 & op_0515=0x4C3 unimpl

# 0xDE9C 0x0003    mov_sv_app At<ArRn1, 1>,At<ArStep1, 0>,Const<Bx, 0>,BSr,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_1,ArStep1_0    is ArRn1_1 & ArStep1_0 & op_0215=0x37A7 unimpl

# 0xD4B4 0x0003    mov_sv_app At<ArRn1, 1>,At<ArStep1, 0>,Const<Bx, 1>,BSr,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_1,ArStep1_0    is ArRn1_1 & ArStep1_0 & op_0215=0x352D unimpl

# 0x98E0 0x001C    mov_sv_app At<ArRn1, 4>,At<ArStep1Alt, 3>,At<Bx, 2>,BSr,Sub,PP,Sub,PP,
:mov_sv_app    ArRn1_4,ArStep1Alt_3,Bx_2    is ArRn1_4 & ArStep1Alt_3 & Bx_2 & op_0001=0x0 & op_0515=0x4C7 unimpl

# 0x9068 0x0101    cbs At<Axh, 0>,At<CbsCond, 8>,
:cbs    Axh_0,CbsCond_8    is Axh_0 & CbsCond_8 & op_0107=0x34 & op_0915=0x48 unimpl

# 0xD49E 0x0121    cbs At<Axh, 8>,At<Bxh, 5>,At<CbsCond, 0>,
:cbs    Axh_8,Bxh_5,CbsCond_0    is Axh_8 & Bxh_5 & CbsCond_0 & op_0104=0xF & op_0607=0x2 & op_0915=0x6A unimpl

# 0xD5C0 0x000F    cbs At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,At<CbsCond, 3>,
:cbs    ArpRn1_2,ArpStep1_0,ArpStep1_1,CbsCond_3    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & CbsCond_3 & op_0415=0xD5C unimpl

# 0x4D88 0x0002    mma At<Ax, 1>,SX,SY,SX,SY,BZr,Add,PP,Sub,PP,
:mma    Ax_1    is Ax_1 & op_0000=0x0 & op_0215=0x1362 unimpl

# 0xD49D 0x0020    mma At<Bx, 5>,SX,SY,SX,SY,BZr,Add,PP,Sub,PP,
:mma    Bx_5    is Bx_5 & op_0004=0x1D & op_0615=0x352 unimpl

# 0x5E24 0x0003    mma At<Ab, 0>,SX,SY,SX,SY,BZr,Add,PP,Add,PP,
:mma    Ab_0    is Ab_0 & op_0215=0x1789 unimpl

# 0x8061 0x0300    mma At<Ab, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma    Ab_8    is Ab_8 & op_0007=0x61 & op_1015=0x20 unimpl

# 0x8071 0x0300    mma At<Ab, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma    Ab_8    is Ab_8 & op_0007=0x71 & op_1015=0x20 unimpl

# 0x8461 0x0300    mma At<Ab, 8>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PP,
:mma    Ab_8    is Ab_8 & op_0007=0x61 & op_1015=0x21 unimpl

# 0x8471 0x0300    mma At<Ab, 8>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PA,
:mma    Ab_8    is Ab_8 & op_0007=0x71 & op_1015=0x21 unimpl

# 0xD484 0x0003    mma At<Ab, 0>,SX,SY,SX,SY,BAc,Add,PA,Add,PA,
:mma    Ab_0    is Ab_0 & op_0215=0x3521 unimpl

# 0xD4A0 0x0003    mma At<Ab, 0>,SX,SY,SX,SY,BAc,Add,PP,Sub,PP,
:mma    Ab_0    is Ab_0 & op_0215=0x3528 unimpl

# 0x4D89 0x0002    mma At<Ax, 1>,SX,SY,SX,UY,BZr,Add,PP,Sub,PP,
:mma    Ax_1    is Ax_1 & op_0000=0x1 & op_0215=0x1362 unimpl

# 0xD59D 0x0020    mma At<Bx, 5>,SX,SY,SX,UY,BZr,Add,PP,Sub,PP,
:mma    Bx_5    is Bx_5 & op_0004=0x1D & op_0615=0x356 unimpl

# 0x5F24 0x0003    mma At<Ab, 0>,SX,SY,SX,UY,BZr,Add,PP,Add,PP,
:mma    Ab_0    is Ab_0 & op_0215=0x17C9 unimpl

# 0x8069 0x0300    mma At<Ab, 8>,SX,SY,SX,UY,BAc,Add,PP,Add,PP,
:mma    Ab_8    is Ab_8 & op_0007=0x69 & op_1015=0x20 unimpl

# 0x8079 0x0300    mma At<Ab, 8>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    Ab_8    is Ab_8 & op_0007=0x79 & op_1015=0x20 unimpl

# 0x8469 0x0300    mma At<Ab, 8>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PP,
:mma    Ab_8    is Ab_8 & op_0007=0x69 & op_1015=0x21 unimpl

# 0x8479 0x0300    mma At<Ab, 8>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PA,
:mma    Ab_8    is Ab_8 & op_0007=0x79 & op_1015=0x21 unimpl

# 0xD584 0x0003    mma At<Ab, 0>,SX,SY,SX,UY,BAc,Add,PA,Add,PA,
:mma    Ab_0    is Ab_0 & op_0215=0x3561 unimpl

# 0xD5A0 0x0003    mma At<Ab, 0>,SX,SY,SX,UY,BAc,Add,PP,Sub,PP,
:mma    Ab_0    is Ab_0 & op_0215=0x3568 unimpl

# 0xCA00 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,UX,SY,BAc,Sub,PP,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x0 & op_0815=0xCA unimpl

# 0xCA01 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,SX,UY,BAc,Sub,PP,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x1 & op_0815=0xCA unimpl

# 0xCA02 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,UX,SY,BAc,Sub,PA,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x2 & op_0815=0xCA unimpl

# 0xCA03 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,SX,UY,BAc,Sub,PA,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x3 & op_0815=0xCA unimpl

# 0xCA04 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,UX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x4 & op_0815=0xCA unimpl

# 0xCA05 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x5 & op_0815=0xCA unimpl

# 0xCA06 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,UX,SY,BAc,Add,PA,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x6 & op_0815=0xCA unimpl

# 0xCA07 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,UX,SY,SX,UY,BAc,Add,PA,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x7 & op_0815=0xCA unimpl

# 0xCB00 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,UX,SY,BAc,Sub,PP,Sub,PP,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x0 & op_0815=0xCB unimpl

# 0xCB01 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PP,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x1 & op_0815=0xCB unimpl

# 0xCB02 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,UX,SY,BAc,Sub,PP,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x2 & op_0815=0xCB unimpl

# 0xCB03 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x3 & op_0815=0xCB unimpl

# 0xCB04 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,UX,SY,BAc,Add,PP,Add,PP,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x4 & op_0815=0xCB unimpl

# 0xCB05 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,SX,UY,BAc,Add,PP,Add,PP,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x5 & op_0815=0xCB unimpl

# 0xCB06 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,UX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x6 & op_0815=0xCB unimpl

# 0xCB07 0x00F8    mma At<ArpRn1, 5>,At<ArpStep1, 3>,At<ArpStep1, 4>,EMod,EMod,At<Ab, 6>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_5,ArpStep1_3,ArpStep1_4,Ab_6    is ArpRn1_5 & ArpStep1_3 & ArpStep1_4 & Ab_6 & op_0002=0x7 & op_0815=0xCB unimpl

# 0x0D30 0x000F    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,EMod,DMod,At<Ax, 0>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ax_0    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ax_0 & op_0415=0xD3 unimpl

# 0x0D20 0x000F    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,DMod,EMod,At<Ax, 0>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ax_0    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ax_0 & op_0415=0xD2 unimpl

# 0x4B50 0x000F    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,DMod,DMod,At<Ax, 0>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ax_0    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ax_0 & op_0415=0x4B5 unimpl

# 0x9861 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,EMod,DMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x1 & op_0507=0x3 & op_0915=0x4C unimpl

# 0x9862 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,DMod,EMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x2 & op_0507=0x3 & op_0915=0x4C unimpl

# 0x9863 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,DMod,DMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x3 & op_0507=0x3 & op_0915=0x4C unimpl

# 0x98E1 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,EMod,DMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x1 & op_0507=0x7 & op_0915=0x4C unimpl

# 0x98E2 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,DMod,EMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x2 & op_0507=0x7 & op_0915=0x4C unimpl

# 0x98E3 0x011C    mma At<ArpRn1, 4>,At<ArpStep1, 2>,At<ArpStep1, 3>,DMod,DMod,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_4,ArpStep1_2,ArpStep1_3,Ax_8    is ArpRn1_4 & ArpStep1_2 & ArpStep1_3 & Ax_8 & op_0001=0x3 & op_0507=0x7 & op_0915=0x4C unimpl

# 0x80C8 0x0C07    mma At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,EMod,EMod,At<Ab, 10>,SX,SY,SX,SY,BAc,Add,PP,Sub,PP,
:mma    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_10    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_10 & op_0309=0x19 & op_1215=0x8 unimpl

# 0x81C8 0x0C07    mma At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,EMod,EMod,At<Ab, 10>,SX,SY,SX,SY,BAc,Add,PP,Sub,PA,
:mma    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_10    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_10 & op_0309=0x39 & op_1215=0x8 unimpl

# 0x82C8 0x0C07    mma At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,EMod,EMod,At<Ab, 10>,SX,SY,SX,SY,BZr,Add,PP,Add,PP,
:mma    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_10    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_10 & op_0309=0x59 & op_1215=0x8 unimpl

# 0x83C8 0x0C07    mma At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,EMod,EMod,At<Ab, 10>,SX,SY,SX,SY,BZr,Add,PP,Add,PA,
:mma    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_10    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_10 & op_0309=0x79 & op_1215=0x8 unimpl

# 0x80C2 0x0F01    mma At<ArpRn1, 0>,At<ArpStep1, 8>,At<ArpStep1, 9>,EMod,EMod,At<Ab, 10>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma    ArpRn1_0,ArpStep1_8,ArpStep1_9,Ab_10    is ArpRn1_0 & ArpStep1_8 & ArpStep1_9 & Ab_10 & op_0107=0x61 & op_1215=0x8 unimpl

# 0x49C8 0x0037    mma At<ArpRn1, 2>,At<ArpStep1, 0>,At<ArpStep1, 1>,EMod,EMod,At<Ab, 4>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PA,
:mma    ArpRn1_2,ArpStep1_0,ArpStep1_1,Ab_4    is ArpRn1_2 & ArpStep1_0 & ArpStep1_1 & Ab_4 & op_0303=0x1 & op_0615=0x127 unimpl

# 0x00C0 0x003E    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,EMod,EMod,At<Ab, 4>,SX,SY,SX,SY,BZr,Add,PP,Sub,PP,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ab_4    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ab_4 & op_0000=0x0 & op_0615=0x3 unimpl

# 0x00C1 0x003E    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,EMod,EMod,At<Ab, 4>,SX,SY,SX,SY,BZr,Add,PP,Sub,PA,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ab_4    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ab_4 & op_0000=0x1 & op_0615=0x3 unimpl

# 0xD7A0 0x001E    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,EMod,EMod,At<Ax, 4>,SX,SY,SX,SY,BSv,Add,PP,Add,PP,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ax_4    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ax_4 & op_0000=0x0 & op_0515=0x6BD unimpl

# 0xD7A1 0x001E    mma At<ArpRn1, 3>,At<ArpStep1, 1>,At<ArpStep1, 2>,EMod,EMod,At<Ax, 4>,SX,SY,SX,SY,BSr,Add,PP,Add,PP,
:mma    ArpRn1_3,ArpStep1_1,ArpStep1_2,Ax_4    is ArpRn1_3 & ArpStep1_1 & ArpStep1_2 & Ax_4 & op_0000=0x1 & op_0515=0x6BD unimpl

# 0xC800 0x00FF    mma At<ArpRn2, 4>,At<ArpStep2, 0>,At<ArpStep2, 2>,EMod,EMod,At<Ab, 6>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma    ArpRn2_4,ArpStep2_0,ArpStep2_2,Ab_6    is ArpRn2_4 & ArpStep2_0 & ArpStep2_2 & Ab_6 & op_0815=0xC8 unimpl

# 0xC900 0x00FF    mma At<ArpRn2, 4>,At<ArpStep2, 0>,At<ArpStep2, 2>,EMod,EMod,At<Ab, 6>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PP,
:mma    ArpRn2_4,ArpStep2_0,ArpStep2_2,Ab_6    is ArpRn2_4 & ArpStep2_0 & ArpStep2_2 & Ab_6 & op_0815=0xC9 unimpl

# 0xD5E0 0x000B    mma_mx_xy At<ArRn1, 1>,At<ArStep1, 0>,At<Ax, 3>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PP,
:mma_mx_xy    ArRn1_1,ArStep1_0,Ax_3    is ArRn1_1 & ArStep1_0 & Ax_3 & op_0202=0x0 & op_0415=0xD5E unimpl

# 0xD5E4 0x000B    mma_mx_xy At<ArRn1, 1>,At<ArStep1, 0>,At<Ax, 3>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma_mx_xy    ArRn1_1,ArStep1_0,Ax_3    is ArRn1_1 & ArStep1_0 & Ax_3 & op_0202=0x1 & op_0415=0xD5E unimpl

# 0x8862 0x0118    mma_xy_mx At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PP,
:mma_xy_mx    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x2 & op_0507=0x3 & op_0915=0x44 unimpl

# 0x8A62 0x0118    mma_xy_mx At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma_xy_mx    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x2 & op_0507=0x3 & op_0915=0x45 unimpl

# 0x4DA0 0x001C    mma_my_my At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 4>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PP,
:mma_my_my    ArRn1_3,ArStep1_2,Ax_4    is ArRn1_3 & ArStep1_2 & Ax_4 & op_0001=0x0 & op_0515=0x26D unimpl

# 0x4DA1 0x001C    mma_my_my At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 4>,SX,SY,SX,UY,BAc,Sub,PP,Sub,PA,
:mma_my_my    ArRn1_3,ArStep1_2,Ax_4    is ArRn1_3 & ArStep1_2 & Ax_4 & op_0001=0x1 & op_0515=0x26D unimpl

# 0x4DA2 0x001C    mma_my_my At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 4>,SX,SY,SX,UY,BAc,Add,PP,Add,PP,
:mma_my_my    ArRn1_3,ArStep1_2,Ax_4    is ArRn1_3 & ArStep1_2 & Ax_4 & op_0001=0x2 & op_0515=0x26D unimpl

# 0x4DA3 0x001C    mma_my_my At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 4>,SX,SY,SX,UY,BAc,Add,PP,Add,PA,
:mma_my_my    ArRn1_3,ArStep1_2,Ax_4    is ArRn1_3 & ArStep1_2 & Ax_4 & op_0001=0x3 & op_0515=0x26D unimpl

# 0x94E0 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PP,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x0 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E1 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,UX,SY,BAc,Sub,PP,Sub,PP,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x1 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E2 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Sub,PP,Sub,PA,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x2 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E3 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,UX,SY,BAc,Sub,PP,Sub,PA,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x3 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E4 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x4 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E5 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,UX,SY,BAc,Add,PP,Add,PP,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x5 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E6 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,SX,SY,BAc,Add,PP,Add,PA,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x6 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x94E7 0x0118    mma_my_my At<ArRn1, 4>,At<ArStep1, 3>,At<Ax, 8>,SX,SY,UX,SY,BAc,Add,PP,Add,PA,
:mma_my_my    ArRn1_4,ArStep1_3,Ax_8    is ArRn1_4 & ArStep1_3 & Ax_8 & op_0002=0x7 & op_0507=0x7 & op_0915=0x4A unimpl

# 0x4FA0 0x005F    mma_mov At<Axh, 6>,At<Bxh, 2>,At<ArRn1, 1>,At<ArStep1, 0>,At<Ab, 3>,SX,SY,SX,SY,BAc,Add,PP,Add,PP,
:mma_mov    Axh_6,Bxh_2,ArRn1_1,ArStep1_0,Ab_3    is Axh_6 & Bxh_2 & ArRn1_1 & ArStep1_0 & Ab_3 & op_0505=0x1 & op_0715=0x9F unimpl

# 0xD3A0 0x005F    mma_mov At<Axh, 6>,At<Bxh, 2>,At<ArRn1, 1>,At<ArStep1, 0>,At<Ab, 3>,SX,SY,SX,SY,BAc,Add,PP,Sub,PP,
:mma_mov    Axh_6,Bxh_2,ArRn1_1,ArStep1_0,Ab_3    is Axh_6 & Bxh_2 & ArRn1_1 & ArStep1_0 & Ab_3 & op_0505=0x1 & op_0715=0x1A7 unimpl

# 0x80D0 0x070C    mma_mov At<Axh, 9>,At<Bxh, 8>,At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 10>,SX,SY,SX,SY,BSv,Add,PP,Sub,PP,
:mma_mov    Axh_9,Bxh_8,ArRn1_3,ArStep1_2,Ax_10    is Axh_9 & Bxh_8 & ArRn1_3 & ArStep1_2 & Ax_10 & op_0001=0x0 & op_0407=0xD & op_1115=0x10 unimpl

# 0x80D1 0x070C    mma_mov At<Axh, 9>,At<Bxh, 8>,At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 10>,SX,SY,SX,SY,BSr,Add,PP,Sub,PP,
:mma_mov    Axh_9,Bxh_8,ArRn1_3,ArStep1_2,Ax_10    is Axh_9 & Bxh_8 & ArRn1_3 & ArStep1_2 & Ax_10 & op_0001=0x1 & op_0407=0xD & op_1115=0x10 unimpl

# 0x80D2 0x070C    mma_mov At<Axh, 9>,At<Bxh, 8>,At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 10>,SX,SY,SX,SY,BSv,Add,PP,Add,PP,
:mma_mov    Axh_9,Bxh_8,ArRn1_3,ArStep1_2,Ax_10    is Axh_9 & Bxh_8 & ArRn1_3 & ArStep1_2 & Ax_10 & op_0001=0x2 & op_0407=0xD & op_1115=0x10 unimpl

# 0x80D3 0x070C    mma_mov At<Axh, 9>,At<Bxh, 8>,At<ArRn1, 3>,At<ArStep1, 2>,At<Ax, 10>,SX,SY,SX,SY,BSr,Add,PP,Add,PP,
:mma_mov    Axh_9,Bxh_8,ArRn1_3,ArStep1_2,Ax_10    is Axh_9 & Bxh_8 & ArRn1_3 & ArStep1_2 & Ax_10 & op_0001=0x3 & op_0407=0xD & op_1115=0x10 unimpl

# 0x5818 0x01C1    mma_mov At<ArRn2, 7>,At<ArStep1, 6>,At<Ax, 0>,SX,SY,SX,SY,BSv,Add,PP,Sub,PP,
:mma_mov    ArRn2_7,ArStep1_6,Ax_0    is ArRn2_7 & ArStep1_6 & Ax_0 & op_0105=0xC & op_0915=0x2C unimpl

# 0x5838 0x01C1    mma_mov At<ArRn2, 7>,At<ArStep1, 6>,At<Ax, 0>,SX,SY,SX,SY,BSr,Add,PP,Sub,PP,
:mma_mov    ArRn2_7,ArStep1_6,Ax_0    is ArRn2_7 & ArStep1_6 & Ax_0 & op_0105=0x1C & op_0915=0x2C unimpl

# 0x90E0 0x011F    addhp At<ArRn2, 2>,At<ArStep2, 0>,At<Px, 4>,At<Ax, 8>,
:addhp    ArRn2_2,ArStep2_0,Px_4,Ax_8    is ArRn2_2 & ArStep2_0 & Px_4 & Ax_8 & op_0507=0x7 & op_0915=0x48 unimpl

