macro GenericAlbSet(a,b) 
{
    b = a | b;
    M = b[15,1] != 0;
    Z = b == 0;
}
macro GenericAlbRst(a,b) 
{
    b = ~a | b;
    M = b[15,1] != 0;
    Z = b == 0;
}
macro GenericAlbChng(a,b) 
{
    b = a ^ b;
    M = b[15,1] != 0;
    Z = b == 0;
}
macro GenericAlbAddv(a,b) 
{
    C = carry(a,b);
    M = scarry(a,b); # Todo: check
    b = a + b;
    Z = b == 0;
}
macro GenericAlbTst0(a,b) 
{
    Z = (a & b) == 0;
}
macro GenericAlbTst1(a,b) 
{
    Z = (a & ~b) == 0;
}
macro GenericAlbSubv(a,b) 
{
    C = carry(b, -a);
    M = scarry(b, -a); # Todo: check
    b = b - a;
    Z = b == 0;
}
macro GenericAlbCmpv(a,b) 
{
    tmp:2 = b;
    GenericAlbSubv(a,tmp);
}

# enum class AlbOp {
#     Set,
#     Rst,
#     Chng,
#     Addv,
#     Tst0,
#     Tst1,
#     Cmpv,
#     Subv,

#     EnumEnd
# };
# <<< ALB normal >>>
# 0xE100 0xFFFF0EFF    alb At<Alb, 9>,At<Imm16, 16>,At<MemImm8, 0>,
:alb_set    Imm16_16,MemImm8_0    is Alb_9=0x0 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbSet(Imm16_16:2, MemImm8_0);
}
:alb_rst    Imm16_16,MemImm8_0    is Alb_9=0x1 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbRst(Imm16_16:2, MemImm8_0);
}
:alb_chng    Imm16_16,MemImm8_0    is Alb_9=0x2 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbChng(Imm16_16:2, MemImm8_0);
}
:alb_addv    Imm16_16,MemImm8_0    is Alb_9=0x3 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbAddv(Imm16_16:2, MemImm8_0);
}
:alb_tst0    Imm16_16,MemImm8_0    is Alb_9=0x4 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbTst0(Imm16_16:2, MemImm8_0);
}
:alb_tst1    Imm16_16,MemImm8_0    is Alb_9=0x5 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbTst1(Imm16_16:2, MemImm8_0);
}
:alb_cmpv    Imm16_16,MemImm8_0    is Alb_9=0x6 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbCmpv(Imm16_16:2, MemImm8_0);
}
:alb_subv    Imm16_16,MemImm8_0    is Alb_9=0x7 & MemImm8_0 & op_0808=0x1 & op_1215=0xE ; Imm16_16
{
    GenericAlbSubv(Imm16_16:2, MemImm8_0);
}

# 0x80E0 0xFFFF0E1F    alb At<Alb, 9>,At<Imm16, 16>,At<Rn, 0>,At<StepZIDS, 3>,
:alb_set    Imm16_16,RnAddressAndModify_0    is Alb_9=0x0 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbSet(Imm16_16:2, RnAddressAndModify_0);
}
:alb_rst    Imm16_16,RnAddressAndModify_0    is Alb_9=0x1 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbRst(Imm16_16:2, RnAddressAndModify_0);
}
:alb_chng    Imm16_16,RnAddressAndModify_0    is Alb_9=0x2 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbChng(Imm16_16:2, RnAddressAndModify_0);
}
:alb_addv    Imm16_16,RnAddressAndModify_0    is Alb_9=0x3 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbAddv(Imm16_16:2, RnAddressAndModify_0);
}
:alb_tst0    Imm16_16,RnAddressAndModify_0    is Alb_9=0x4 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbTst0(Imm16_16:2, RnAddressAndModify_0);
}
:alb_tst1    Imm16_16,RnAddressAndModify_0    is Alb_9=0x5 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbTst1(Imm16_16:2, RnAddressAndModify_0);
}
:alb_cmpv    Imm16_16,RnAddressAndModify_0    is Alb_9=0x6 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbCmpv(Imm16_16:2, RnAddressAndModify_0);
}
:alb_subv    Imm16_16,RnAddressAndModify_0    is Alb_9=0x7 & RnAddressAndModify_0 & op_0508=0x7 & op_1215=0x8 ; Imm16_16
{
    GenericAlbSubv(Imm16_16:2, RnAddressAndModify_0);
}

# 0x81E0 0xFFFF0E1F    alb At<Alb, 9>,At<Imm16, 16>,At<Register, 0>,
#todo: recheck implementation f0r Ablh regs
:alb_set    Imm16_16,Register_0    is Alb_9=0x0 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbSet(Imm16_16:2, Register_0);
}
:alb_rst    Imm16_16,Register_0    is Alb_9=0x1 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbRst(Imm16_16:2, Register_0);
}
:alb_chng    Imm16_16,Register_0    is Alb_9=0x2 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbChng(Imm16_16:2, Register_0);
}
:alb_addv    Imm16_16,Register_0    is Alb_9=0x3 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbAddv(Imm16_16:2, Register_0);
}
:alb_tst0    Imm16_16,Register_0    is Alb_9=0x4 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbTst0(Imm16_16:2, Register_0);
}
:alb_tst1    Imm16_16,Register_0    is Alb_9=0x5 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbTst1(Imm16_16:2, Register_0);
}
:alb_cmpv    Imm16_16,Register_0    is Alb_9=0x6 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbCmpv(Imm16_16:2, Register_0);
}
:alb_subv    Imm16_16,Register_0    is Alb_9=0x7 & Register_0 & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    GenericAlbSubv(Imm16_16:2, Register_0);
}
:alb_set    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x0 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbSet(Imm16_16:2, tmp_p0);
    P0E = tmp_p0 > 0x7FFF;
    p0[15,15] = tmp_p0;
}
:alb_rst    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x1 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbRst(Imm16_16:2, tmp_p0);
    P0E = tmp_p0 > 0x7FFF;
    p0[15,15] = tmp_p0;
}
:alb_chng    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x2 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbChng(Imm16_16:2, tmp_p0);
    P0E = tmp_p0 > 0x7FFF;
    p0[15,15] = tmp_p0;
}
:alb_addv    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x3 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbAddv(Imm16_16:2, tmp_p0);
    P0E = tmp_p0 > 0x7FFF;
    p0[15,15] = tmp_p0;
}
:alb_tst0    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x4 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbTst0(Imm16_16:2, tmp_p0);
}
:alb_tst1    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x5 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbTst1(Imm16_16:2, tmp_p0);
}
:alb_cmpv    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x6 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbCmpv(Imm16_16:2, tmp_p0);
}
:alb_subv    Imm16_16,ProductToBus40p0    is ProductToBus40p0 & Alb_9=0x7 & Register_0004=0x0B & op_0508=0xF & op_1215=0x8 ; Imm16_16
{
    local tmp:5 = (ProductToBus40p0 >> 16) & 0xFFFF;
    local tmp_p0:2 = tmp:2;
    GenericAlbSubv(Imm16_16:2, tmp_p0);
    P0E = tmp_p0 > 0x7FFF;
    p0[15,15] = tmp_p0;
}

# 0x47B8 0xFFFF0007    alb_r6 At<Alb, 0>,At<Imm16, 16>,
:alb_r6_set    Imm16_16    is Alb_0=0x0 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbSet(Imm16_16:2, r6);
}
:alb_r6_rst    Imm16_16    is Alb_0=0x1 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbRst(Imm16_16:2, r6);
}
:alb_r6_chng    Imm16_16    is Alb_0=0x2 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbChng(Imm16_16:2, r6);
}
:alb_r6_addv    Imm16_16    is Alb_0=0x3 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbAddv(Imm16_16:2, r6);
}
:alb_r6_tst0    Imm16_16    is Alb_0=0x4 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbTst0(Imm16_16:2, r6);
}
:alb_r6_tst1    Imm16_16    is Alb_0=0x5 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbTst1(Imm16_16:2, r6);
}
:alb_r6_cmpv    Imm16_16    is Alb_0=0x6 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbCmpv(Imm16_16:2, r6);
}
:alb_r6_subv    Imm16_16    is Alb_0=0x7 & op_0315=0x8F7 ; Imm16_16
{
    GenericAlbSubv(Imm16_16:2, r6);
}

# <<< ALB SttMod >>>
# 0x43C8 0xFFFF0007    alb Const<Alb, 0>,At<Imm16, 16>,At<SttMod, 0>,
:alb_set    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x879 ; Imm16_16 
{
    # todo: set context regs
    GenericAlbSet(Imm16_16:2,SttMod_0);
}

# 0x4388 0xFFFF0007    alb Const<Alb, 1>,At<Imm16, 16>,At<SttMod, 0>,
:alb_rst    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x871 ; Imm16_16
{
    GenericAlbRst(Imm16_16:2,SttMod_0);
}

# 0x0038 0xFFFF0007    alb Const<Alb, 2>,At<Imm16, 16>,At<SttMod, 0>,
:alb_chng    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x7 ; Imm16_16 
{
    GenericAlbChng(Imm16_16:2,SttMod_0);
}

# 0x9470 0xFFFF0007    alb Const<Alb, 4>,At<Imm16, 16>,At<SttMod, 0>,
:alb_tst0    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x128E ; Imm16_16 
{
    GenericAlbTst0(Imm16_16:2,SttMod_0);
}

# 0x9478 0xFFFF0007    alb Const<Alb, 5>,At<Imm16, 16>,At<SttMod, 0>,
:alb_tst1    Imm16_16,SttMod_0    is SttMod_0 & op_0315=0x128F ; Imm16_16 
{
    GenericAlbTst1(Imm16_16:2,SttMod_0);
}
