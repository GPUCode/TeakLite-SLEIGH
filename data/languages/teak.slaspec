# sleigh specification file for TeakLite

define endian=little;
define alignment=2;

define space RAM    type=ram_space    size=2     wordsize=2      default;
define space register type=register_space size=4;

# 40bit accumulators
define register offset=0x0 size=5  [ a0 a1 b0 b1 ];
define bitrange a0l=a0[0,16]
                a0h=a0[16,16]
                a0e=a0[32,8]

                a1l=a1[0,16]
                a1h=a1[16,16]
                a1e=a1[32,8]

                b0l=b0[0,16]
                b0h=b0[16,16]
                b0e=b0[32,8]

                b1l=b1[0,16]
                b1h=b1[16,16]
                b1e=b1[32,8]
;

# GPR
define register offset=0x20 size=2  [ r0 r1 r2 r3 r4 r5 r6 r7 ];

# 32bit Multiply parms & results
define register offset=0x40 size=2  [ x0 y0 x1 y1 p0h ];
define register offset=0x50 size=4  [ p0 p1 ]; # todo: 33bit

# Misc
define register offset=0x60 size=3  [ pc ]; # todo: 18bit pc
define register offset=0x70 size=2  [ sp sv mixp lc repc dvm vtr0 vtr1 ];
define register offset=0x80 size=1  [ prpage ];

# User defined
define register offset=0x90 size=2  [ ext0 ext1 ext2 ext3 ];
# todo: shadow

# Control & status
#  TL
define register offset=0x100 size=2 [ st0 st1 st2 icr ];
#  TL II
define register offset=0x110 size=2 [ stt0 stt1 stt2 mod0 mod1 mod2 mod3 ];
#todo define bitrange ...

# Address conf
define register offset=0x120 size=2 [ ar0 ar1 arp0 arp1 arp2 arp3 ];
#todo define bitrange ...

define register offset=0x130 size=2 [ cfgi cfgj stepi0 stepj0 ];
#todo define bitrange ...

#TOKENS
define token teakop (16)
    op1_9 =   (1,9) 
    op12_15 = (12,15)

    Ab_0 = (0,1)
    Ab_10 = (10,11)
    Ab_11 = (11,12)
    Ab_2 = (2,3)
    Ab_3 = (3,4)
    Ab_4 = (4,5)
    Ab_5 = (5,6)
    Ab_7 = (7,8)
    Abe_0 = (0,1)
    Abe_1 = (1,2)
    Abh_10 = (10,11)
    Abh_2 = (2,3)
    Abh_3 = (3,4)
    Abh_4 = (4,5)
    Abh_8 = (8,9)
    Abl_0 = (0,1)
    Abl_10 = (10,11)
    Abl_3 = (3,4)
    Ablh_10 = (10,12)
    Ablh_9 = (9,11)
    ArArpSttMod_0 = (0,3)
    ArArpSttMod_8 = (8,11)
    ArArp_0 = (0,2)
    ArArp_8 = (8,10)
    Ar_0 = (0,0)
    Ar_2 = (2,2)
    Arp_0 = (0,1)
    Ax_0 = (0,0)
    Ax_1 = (1,1)
    Ax_11 = (11,11)
    Ax_12 = (12,12)
    Ax_3 = (3,3)
    Ax_4 = (4,4)
    Ax_5 = (5,5)
    Ax_6 = (6,6)
    Ax_8 = (8,8)
    Ax_not12 = (12,12)
    Ax_not8 = (8,8)
    Axh_0 = (0,0)
    Axh_1 = (1,1)
    Axh_11 = (11,11)
    Axh_12 = (12,12)
    Axh_3 = (3,3)
    Axh_4 = (4,4)
    Axh_6 = (6,6)
    Axh_8 = (8,8)
    Axh_not0 = (0,0)
    Axl_0 = (0,0)
    Axl_12 = (12,12)
    Axl_4 = (4,4)
    Axl_8 = (8,8)
    BankFlags6_0 = (0,5)
    Bx_0 = (0,0)
    Bx_1 = (1,1)
    Bx_10 = (10,10)
    Bx_12 = (12,12)
    Bx_3 = (3,3)
    Bx_4 = (4,4)
    Bx_5 = (5,5)
    Bx_8 = (8,8)
    Bxh_0 = (0,0)
    Bxh_10 = (10,10)
    Bxh_3 = (3,3)
    Bxh_4 = (4,4)
    Bxh_5 = (5,5)
    Cond_0 = (0,3)
    Imm2u_0 = (0,1)
    Imm2u_1 = (1,2)
    Imm4bitno_8 = (8,11)
    Imm4u_0 = (0,3)
    Imm5s_0 = (0,4) signed
    Imm5u_0 = (0,4) signed
    Imm6s_0 = (0,5) signed
    Imm7s_0 = (0,6) signed
    Imm8s_0 = (0,7) signed
    Imm8u_0 = (0,7)
    Imm9u_0 = (0,8)
    MemR0123_0 = (0,1)
    MemR0123_4 = (4,5)
    MemR0123_5 = (5,6)
    MemR01_0 = (0,0)
    MemR01_2 = (2,2)
    MemR01_3 = (3,3)
    MemR01_4 = (4,4)
    MemR01_5 = (5,5)
    MemR01_8 = (8,8)
    MemR01_9 = (9,9)
    MemR0425_0 = (0,1)
    MemR0425_10 = (10,11)
    MemR0425_2 = (2,3)
    MemR0425_3 = (3,4)
    MemR0425_4 = (4,5)
    MemR04_1 = (1,1)
    MemR04_3 = (3,3)
    MemR04_4 = (4,4)
    MemR04_8 = (8,8)
    MemR4567_4 = (4,5)
    MemR4567_8 = (8,9)
    MemR45_0 = (0,0)
    MemR45_2 = (2,2)
    MemR45_3 = (3,3)
    MemR45_4 = (4,4)
    MemR45_5 = (5,5)
    MemR45_8 = (8,8)
    MemImm8_0 = (0,7)
    MemR7Imm7s_0 = (0,7) signed
    MemRn_0 = (0,2)
    ProgMemAx_5 = (5,5)
    ProgMemAxl_5 = (5,5)
    ProgMemRn_0 = (0,2)
    Px_0 = (0,0)
    Px_1 = (1,1)
    Px_4 = (4,4)
    R0123457y0_10 = (10,12)
    R0123457y0_9 = (9,11)
    RegisterP0_0 = (0,4)
    Register_0 = (0,4)
    Register_5 = (5,9)
    RelAddr7_4 = (4,7)
    Rn_0 = (0,2)
    SttMod_0 = (0,2)
    SttMod_8 = (8,10)
    SwapTypes4_0 = (0,3)
    Unused1_0 = (0,0)
    Unused1_1 = (1,1)
    Unused1_10 = (10,10)
    Unused1_5 = (5,5)
    Unused1_8 = (8,8)
    Unused2_0 = (0,1)
    Unused3_0 = (0,2)
    Unused5_0 = (0,4)
    Unused6_0 = (0,5)
    Unused7_0 = (0,6)
    Unused8_0 = (0,7)
;

define token teakop_expanded (32)
    Address16_16 = (16,31)
    Address18_0 = (0,2)
    Address18_4 = (4,6)
    Address18_5 = (5,7)
    Address18_16 = (16,31)
    Imm16_16 = (16,31)
    Imm4bitno_16 = (16,19)
    MemImm16_16 = (16,31)
    MemR7Imm16_16 = (16,31)
    Unused12_20 = (20,31)
;

# VARIABLES
attach variables [ Ab_0 Ab_10 Ab_11 Ab_2 Ab_3 Ab_4 Ab_5 Ab_7 ] [ b0 b1 a0 a1 ];
attach variables [ Abe_0 Abe_1 ] [ b0e b1e a0e a1e ];
attach variables [ Abh_10 Abh_2 Abh_3 Abh_4 Abh_8 ] [ b0h b1h a0h a1h ];
attach variables [ Abl_0 Abl_10 Abl_3 ] [ b0l b1l a0l a1l ];
attach variables [ Ablh_10 Ablh_9 ] [ b0l b0h b1l b1h a0l a0h a1l a1h ];
# attach variables [ Address16_16 ];
# attach variables [ Address18_0 Address18_16 Address18_4 Address18_5 ];
attach variables [ ArArpSttMod_0 ArArpSttMod_8 ] [ ar0 ar1 arp0 arp1 arp2 arp3 _ _ stt0 stt1 stt2 _ mod0 mod1 mod2 mod3];
attach variables [ ArArp_0 ArArp_8 ] [ar0 ar1 arp0 arp1 arp2 arp3 _ _];
attach variables [ Ar_0 Ar_2 ] [ ar0 ar1 ];
attach variables [ Arp_0 ] [ arp0 arp1 arp2 arp3 ];
attach variables [ Ax_0 Ax_1 Ax_11 Ax_12 Ax_3 Ax_4 Ax_5 Ax_6 Ax_8 ] [ a0 a1 ];
attach variables [ Ax_not12 Ax_not8 ] [ a1 a0 ];
attach variables [ Axh_0 Axh_1 Axh_11 Axh_12 Axh_3 Axh_4 Axh_6 Axh_8 ] [ a0h a1h ];
attach variables [ Axh_not0 ] [ a1h a0h ];
attach variables [ Axl_0 Axl_12 Axl_4 Axl_8 ] [ a0l a1l];
# attach variables [ BankFlags6_0 ] [];
attach variables [ Bx_0 Bx_1 Bx_10 Bx_12 Bx_3 Bx_4 Bx_5 Bx_8 ] [ b0 b1 ];
attach variables [ Bxh_0 Bxh_10 Bxh_3 Bxh_4 Bxh_5 ] [ b0h b1h ];
# attach variables [ Cond_0 ]
# attach variables [ Imm16_16 ]
# attach variables [ Imm2u_0 Imm2u_1 ]
# attach variables [ Imm4bitno_16 Imm4bitno_8 ]
# attach variables [ Imm4u_0 ]
# attach variables [ Imm5s_0 ]
# attach variables [ Imm5u_0 ]
# attach variables [ Imm6s_0 ]
# attach variables [ Imm7s_0 ]
# attach variables [ Imm8s_0 ]
# attach variables [ Imm8u_0 ]
# attach variables [ Imm9u_0 ]
# attach variables [ MemImm16_16 ]
# attach variables [ MemImm8_0 ]
attach variables [ MemR0123_0 MemR0123_4 MemR0123_5 ] [ r0 r1 r2 r3 ];
attach variables [ MemR01_0 MemR01_2 MemR01_3 MemR01_4 MemR01_5 MemR01_8 MemR01_9 ] [ r0 r1 ];
attach variables [ MemR0425_0 MemR0425_10 MemR0425_2 MemR0425_3 MemR0425_4 ] [ r0 r4 r2 r5 ];
attach variables [ MemR04_1 MemR04_3 MemR04_4 MemR04_8 ] [ r0 r4 ];
attach variables [ MemR4567_4 MemR4567_8 ] [ r4 r5 r6 r7 ];
attach variables [ MemR45_0 MemR45_2 MemR45_3 MemR45_4 MemR45_5 MemR45_8 ] [ r4 r5 ];
# attach variables [ MemR7Imm16_16 ]
# attach variables [ MemR7Imm7s_0 ]
attach variables [ MemRn_0 ] [ r0 r1 r2 r3 r4 r5 r6 r7 ];
attach variables [ ProgMemAx_5 ] [ a0 a1 ];
attach variables [ ProgMemAxl_5 ] [ a0l a1l ];
attach variables [ ProgMemRn_0 ] [ r0 r1 r2 r3 r4 r5 r6 r7 ];
attach variables [ Px_0 Px_1 Px_4 ] [ p0 p1 ];
attach variables [ R0123457y0_10 R0123457y0_9 ] [ r0 r1 r2 r3 r4 r5 r7 y0 ];
attach variables [ RegisterP0_0 ] [ r0 r1 r2 r3 r4 r5 r7 y0
                                    st0 st1 st2
                                    p0
                                    _ # todo: pc 
                                    sp
                                    cfgi cfgj
                                    b0h b1h b0l b1l
                                    ext0 ext1 ext2 ext3
                                    _ _ # todo: a0 a1 
                                    a0l a1l a0h a1h
                                    lc sv ];
attach variables [ Register_0 Register_5 ] [ r0 r1 r2 r3 r4 r5 r7 y0
                                             st0 st1 st2
                                             p0h
                                             _ # todo: pc
                                             sp
                                             cfgi cfgj
                                             b0h b1h b0l b1l
                                             ext0 ext1 ext2 ext3
                                             _ _ # todo: a0 a1
                                             a0l a1l a0h a1h
                                             lc sv ];
# attach variables [ RelAddr7_4 ]
attach variables [ Rn_0 ] [ r0 r1 r2 r3 r4 r5 r6 r7 ];
attach variables [ SttMod_0 SttMod_8 ] [ stt0 stt1 stt2 _ mod0 mod1 mod2 mod3 ];
# attach variables [ SwapTypes4_0 ]
# attach variables [ Unused12_20 ]
# attach variables [ Unused1_0 Unused1_1 Unused1_10 Unused1_5 Unused1_8 ]
# attach variables [ Unused2_0 ]
# attach variables [ Unused3_0 ]
# attach variables [ Unused5_0 ]
# attach variables [ Unused6_0 ]
# attach variables [ Unused7_0 ]

# Instructions
# D2DAh TL2 add  Ab@10, Bx@0
# 1101 --10 1101 101-
# op9_1 op15_12
:add Ab_10,Bx_0    is op1_9=0x16D & Ab_10 & Bx_0 & op12_15=0xD
{
    Bx_0 = Ab_10 + Bx_0;
}
