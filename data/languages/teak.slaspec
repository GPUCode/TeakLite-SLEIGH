# sleigh specification file for TeakLite

define endian=little;
define alignment=2;

define space RAM    type=ram_space    size=2     wordsize=2      default;
define space register type=register_space size=4;

# 40bit accumulators
define register offset=0x0 size=5  [ a0 a1 b0 b1 ];
define bitrange a0l=a0[0,16]
                a0h=a0[16,16]
                a0e=a0[32,8]

                a1l=a1[0,16]
                a1h=a1[16,16]
                a1e=a1[32,8]

                b0l=b0[0,16]
                b0h=b0[16,16]
                b0e=b0[32,8]

                b1l=b1[0,16]
                b1h=b1[16,16]
                b1e=b1[32,8]
;

# GPR
define register offset=0x20 size=2  [ r0 r1 r2 r3 r4 r5 r6 r7 ];

# 32bit Multiply parms & results
define register offset=0x40 size=2  [ x0 y0 x1 y1 p0h ];
define register offset=0x50 size=4  [ p0 p1 ]; # todo: 33bit

# Misc
define register offset=0x60 size=3  [ pc ]; # todo: 18bit pc
define register offset=0x70 size=2  [ sp sv mixp lc repc dvm vtr0 vtr1 ];
define register offset=0x80 size=1  [ prpage ];

# User defined
define register offset=0x90 size=2  [ ext0 ext1 ext2 ext3 ];
# todo: shadow

# Control & status
#  TL
define register offset=0x100 size=2 [ st0 st1 st2 icr ];
#  TL II
define register offset=0x110 size=2 [ stt0 stt1 stt2 mod0 mod1 mod2 mod3 ];
#todo define bitrange ...

# Address conf
define register offset=0x120 size=2 [ ar0 ar1 arp0 arp1 arp2 arp3 ];
#todo define bitrange ...

define register offset=0x130 size=2 [ cfgi cfgj stepi0 stepj0 ];
#todo define bitrange ...

#TOKENS
define token teakop (16)
    op1_9 =   (1,9) 
    op12_15 = (12,15)

    Ab_0 = (0,1)
    Ab_10 = (10,11)
    Ab_11 = (11,12)
    Ab_2 = (2,3)
    Ab_3 = (3,4)
    Ab_4 = (4,5)
    Ab_5 = (5,6)
    Ab_7 = (7,8)
    Abe_0 = (0,1)
    Abe_1 = (1,2)
    Abh_10 = (10,11)
    Abh_2 = (2,3)
    Abh_3 = (3,4)
    Abh_4 = (4,5)
    Abh_8 = (8,9)
    Abl_0 = (0,1)
    Abl_10 = (10,11)
    Abl_3 = (3,4)
    Ablh_10 = (10,12)
    Ablh_9 = (9,11)
    ArArpSttMod_0 = (0,3)
    ArArpSttMod_8 = (8,11)
    ArArp_0 = (0,2)
    ArArp_8 = (8,10)
    Ar_0 = (0,0)
    Ar_2 = (2,2)
    Arp_0 = (0,1)
    Ax_0 = (0,0)
    Ax_1 = (1,1)
    Ax_11 = (11,11)
    Ax_12 = (12,12)
    Ax_3 = (3,3)
    Ax_4 = (4,4)
    Ax_5 = (5,5)
    Ax_6 = (6,6)
    Ax_8 = (8,8)
    Axh_0 = (0,0)
    Axh_1 = (1,1)
    Axh_11 = (11,11)
    Axh_12 = (12,12)
    Axh_3 = (3,3)
    Axh_4 = (4,4)
    Axh_6 = (6,6)
    Axh_8 = (8,8)
    Axl_0 = (0,0)
    Axl_12 = (12,12)
    Axl_4 = (4,4)
    Axl_8 = (8,8)
    BankFlags6_0 = (0,6)
    Bx_0 = (0,0)
    Bx_1 = (1,1)
    Bx_10 = (10,10)
    Bx_12 = (12,12)
    Bx_3 = (3,3)
    Bx_4 = (4,4)
    Bx_5 = (5,5)
    Bx_8 = (8,8)
    Bxh_0 = (0,0)
    Bxh_10 = (10,10)
    Bxh_3 = (3,3)
    Bxh_4 = (4,4)
    Bxh_5 = (5,5)
    Cond_0 = (0,3)
    Imm2u_0 = (0,1)
    Imm2u_1 = (1,2)
    Imm4bitno_8 = (8,11)
    Imm4u_0 = (0,3)
    Imm5s_0 = (0,4) signed
    Imm5u_0 = (0,4) signed
    Imm6s_0 = (0,5) signed
    Imm7s_0 = (0,6) signed
    Imm8s_0 = (0,7) signed
    Imm8u_0 = (0,7)
    Imm9u_0 = (0,8)
    MemR0123_0 = (0,1)
    MemR0123_4 = (4,5)
    MemR0123_5 = (5,6)
    MemR01_0 = (0,0)
    MemR01_2 = (2,2)
    MemR01_3 = (3,3)
    MemR01_4 = (4,4)
    MemR01_5 = (5,5)
    MemR01_8 = (8,8)
    MemR01_9 = (9,9)
    MemR0425_0 = (0,1)
    MemR0425_10 = (10,11)
    MemR0425_2 = (2,3)
    MemR0425_3 = (3,4)
    MemR0425_4 = (4,5)
    MemR04_1 = (1,1)
    MemR04_3 = (3,3)
    MemR04_4 = (4,4)
    MemR04_8 = (8,8)
    MemR4567_4 = (4,5)
    MemR4567_8 = (8,9)
    MemR45_0 = (0,0)
    MemR45_2 = (2,2)
    MemR45_3 = (3,3)
    MemR45_4 = (4,4)
    MemR45_5 = (5,5)
    MemR45_8 = (8,8)
    MemImm8_0 = (0,7)
    MemR7Imm7s_0 = (0,7) signed
    MemRn_0 = (0,2)
    ProgMemAx_5 = (5,5)
    ProgMemAxl_5 = (5,5)
    ProgMemRn_0 = (0,2)
    Px_0 = (0,0)
    Px_1 = (1,1)
    Px_4 = (4,4)
    R0123457y0_10 = (10,12)
    R0123457y0_9 = (9,11)
    RegisterP0_0 = (0,4)
    Register_0 = (0,4)
    Register_5 = (5,9)
    RelAddr7_4 = (4,7)
    Rn_0 = (0,2)
    SttMod_0 = (0,2)
    SttMod_8 = (8,10)
    SwapTypes4_0 = (0,4)
    Unused1_1 = (1,1)
    Unused1_10 = (10,10)
    Unused1_5 = (5,5)
    Unused1_8 = (8,8)
    Unused2_0 = (0,1)
    Unused3_0 = (0,2)
    Unused5_0 = (0,4)
    Unused6_0 = (0,5)
    Unused7_0 = (0,6)
    Unused8_0 = (0,7)
;

define token teakop_expanded (32)
    Address16_16 = (16,31)
    Address18_0 = (0,2)
    Address18_4 = (4,6)
    Address18_5 = (5,7)
    Address18_16 = (16,31)
    Imm16_16 = (16,31)
    Imm4bitno_16 = (16,19)
    MemImm16_16 = (16,31)
    MemR7Imm16_16 = (16,31)
    Unused12_20 = (20,31)
;

# VARIABLES
attach variables [ Ab_10 ] [ b0 b1 a0 a1 ];
attach variables [ Bx_0 ] [ b0 b1 ];
# Instructions

# D2DAh TL2 add  Ab@10, Bx@0
# 1101 --10 1101 101-
# op9_1 op15_12
:add Ab_10,Bx_0    is op1_9=0x16D & Ab_10 & Bx_0 & op12_15=0xD
{
    Bx_0 = Ab_10 + Bx_0;
}